 
                                                                                local v0=string.char;  
                                                                        local v1=string.byte;local v2=string.sub;local   
                                                                    v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local  
                                                                 v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24  
                                                             do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42  
                                                          % #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.   
                                                        byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=       
                                                      string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=   
                                                    getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select  
                                                  ;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;  
                                                  local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39  
                                                ;local v40;local v41;while true do if (v29==3) then v35=nil;function v35()local v43=0;local v44;local    
                                                v45;local v46;local v47;while true do if (v43==0) then v44,v45,v46,v47=v9(v27,v30,v30 + (622 -(555 + 64))  
                                               );v30=v30 + 4 ;v43=1;end if (v43==1) then return (v47 * 16777216) + (v46 * 65536) + (v45 * (1187 -(857 + 74)  
                                              )) + v44 ;end end end v36=nil;v29=4;end if (v29==4) then function v36()local v48=v35();local v49=v35();local   
                                            v50=1;local v51=(v32(v49,1,20) * (2^32)) + v48 ;local v52=v32(v49,21,31);local v53=((v32(v49,32)==1) and  -1) or   
                                            1 ;if (v52==(568 -(367 + 201))) then if (v51==(927 -(214 + 713))) then return v53 * 0 ;else local v105=0;while true  
                                           do if (v105==0) then v52=1;v50=0;break;end end end elseif (v52==(5603 -3556)) then return ((v51==(1817 -(1703 + 114)))  
                                           and (v53 * ((702 -(376 + 325))/0))) or (v53 * NaN) ;end return v16(v53,v52-1023 ) * (v50 + (v51/(2^52))) ;end v37=nil;    
                                          function v37(v54)local v55;if  not v54 then local v95=0;while true do if (v95==0) then v54=v35();if (v54==0) then return ""  
                                          ;end break;end end end v55=v11(v27,v30,(v30 + v54) -1 );v30=v30 + v54 ;local v56={};for v79=1, #v55 do v56[v79]=v10(v9(v11(  
                                        v55,v79,v79)));end return v14(v56);end v29=5;end if (v29==1) then v32=nil;function v32(v57,v58,v59)if v59 then local v96=0;      
                                        local v97;while true do if (v96==0) then v97=(v57/(2^(v58-(2 -1))))%( --[[==============================]]2^(((v59-1) -(v58-1)) +  
                                         1)) ;return v97-(v97%1) ;end end else local v98=0;local    --[[============================================]]v99;while true do    
                                        if (v98==0) then v99=2^(v58-1) ;return (((v57%(v99 +    --[[======================================================]]v99))>=v99) and  
                                       (1 -0)) or 0 ;end end end end v33=nil;v29=2;end if ( --[[==========================================================]]v29==0) then v30=  
                                      1;v31=nil;v27=v12(v11(v27,1060 -(87 + 968) ),v7(    --[[==============================================================]]"\197\201",      
                                      "\53\235\231\116\98"),function(v60)if (v9(v60,2)==( --[[================================================================]]347 -268)) then  
                                       local v100=0;while true do if (v100==0) then v31=  --[[==================================================================]]v8(v11(v60,2   
                                      -1 ,1));return "";end end else local v101=v10(v8(   --[[==================================================================]]v60,16));if v31    
                                     then local v106=0;local v107;while true do if (v106  --[[====================================================================]]==0) then      
                    v107=v13(v101,v31);v31=nil;v106=1;end if (1==v106) then return v107;  --[[====================================================================]]end end else     
              return v101;end end end);v29=1;end if (v29==7) then function v41(v61,v62,   --[[======================================================================]]v63)local v64  
            =v61[1 -0 ];local v65=v61[2];local v66=v61[3];return function(...)local v81=  --[[======================================================================]]v64;local v82  
          =v65;local v83=v66;local v84=v39;local v85=1066 -(68 + 997) ;local v86= -1;     --[[======================================================================]]local v87={};  
        local v88={...};local v89=v20("#",...) -1 ;local v90={};local v91={};for v102=0,  --[[======================================================================]]v89 do if (    
        v102>=v83) then v87[v102-v83 ]=v88[v102 + (1271 -(226 + 1044)) ];else v91[v102]=  --[[======================================================================]]v88[v102 + 1   
      ];end end local v92=(v89-v83) + 1 + 0 ;local v93;local v94;while true do local v103 --[[======================================================================]]=0;while true  
       do if (v103==0) then v93=v81[v85];v94=v93[1181 -(1123 + 57) ];v103=1;end if (v103==1 --[[==================================================================]]) then if (v94   
      <=61) then if (v94<=30) then if (v94<=(60 -46)) then if (v94<=6) then if (v94<=2)     --[[================================================================]]then if (v94<=0)   
    then local v137=0;local v138;while true do if (v137==0) then v138=v93[2];v91[v138]=v91[ --[[==============================================================]]v138]();break;end  
     end elseif (v94>(118 -(32 + 85))) then v91[v93[2]]= #v91[v93[3]];else v91[v93[2]]={};end --[[==========================================================]] elseif (v94<=(4 +   
    0)) then if (v94>3) then v91[v93[2]]=v93[3] + v91[v93[4]] ;else v91[v93[256 -(163 + 91) ]]= --[[====================================================]] -v91[v93[3]];end        
    elseif (v94==5) then do return v91[v93[2]]();end else v91[v93[2 + 0 ]]=v91[v93[3]][v93[1 + 3  --[[==============================================]]]];end elseif (v94<=(967   
    -(892 + 65))) then if (v94<=8) then if (v94>7) then v91[v93[2]][v93[7 -4 ]]=v91[v93[4]];else v62[ --[[====================================]]v93[3]]=v91[v93[3 -1 ]];end    
    elseif (v94==9) then v91[v93[2]]=v93[4 -1 ];elseif (v93[2]==v91[v93[4]]) then v85=v85 + (351 -(87 +   --[[========================]]263)) ;else v85=v93[3];end elseif (    
    v94<=12) then if (v94>11) then if (v93[2]==v91[v93[4]]) then v85=v85 + (181 -(67 + 113)) ;else v85=v93[1 + 2 ];end else do return;end end elseif (v94==13) then local    
  v155=v82[v93[10 -7 ]];local v156;local v157={};v156=v18({},{[v7("\123\221\90\136\52\161\1","\92\36\130\51\230\80\196\121")]=function(v346,v347)local v348=0;local v349;  
  while true do if (v348==0) then v349=v157[v347];return v349[1][v349[2]];end end end,[v7("\122\151\187\217\157\179\75\172\176\196","\218\37\200\213\188\234")]=         
  function(v350,v351,v352)local v353=v157[v351];v353[1 + 0 ][v353[2 -0 ]]=v352;end});for v355=1,v93[4] do local v356=0;local v357;while true do if (0==v356) then v85=v85  
   + 1 ;v357=v81[v85];v356=1;end if (v356==1) then if (v357[1]==79) then v157[v355-1 ]={v91,v357[3]};else v157[v355-1 ]={v62,v357[3]};end v90[ #v90 + 1 ]=v157;break;end   
  end end v91[v93[2 -0 ]]=v41(v155,v156,v63);elseif (v91[v93[2]]~=v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=22) then if (v94<=18) then if (v94<=16)  
   then if (v94==15) then if (v91[v93[2]]<v91[v93[4]]) then v85=v93[3];else v85=v85 + 1 ;end else v91[v93[2]]=v62[v93[3 + 0 ]];end elseif (v94>17) then local v161=0;      
  local v162;while true do if (v161==0) then v162=v93[2];do return v21(v91,v162,v86);end break;end end else v91[v93[7 -5 ]]=v91[v93[3]][v93[4]];end elseif (v94<=20) then  
   if (v94==19) then local v165=0;local v166;while true do if (v165==0) then v166=v93[2];v91[v166]=v91[v166](v91[v166 + 1 ]);break;end end else v91[v93[2]]=v91[v93[3]]/   
  v93[4] ;end elseif (v94==(973 -(802 + 150))) then if  not v91[v93[2]] then v85=v85 + 1 ;else v85=v93[7 -4 ];end else v91[v93[2]]=v91[v93[3]] -v91[v93[4]] ;end elseif (  
  v94<=(46 -20)) then if (v94<=24) then if (v94>23) then local v169=0;local v170;local v171;local v172;while true do if (v169==1) then v172=0;for v462=v170,v93[3 + 1 ]    
  do v172=v172 + (998 -(915 + 82)) ;v91[v462]=v171[v172];end break;end if (v169==0) then v170=v93[2];v171={v91[v170](v21(v91,v170 + 1 ,v86))};v169=1;end end else local    
  v173=v93[5 -3 ];local v174=v91[v173];local v175=v91[v173 + 2 ];if (v175>0) then if (v174>v91[v173 + 1 ]) then v85=v93[2 + 1 ];else v91[v173 + 3 ]=v174;end elseif (v174<   
  v91[v173 + (1475 -(1329 + 145)) ]) then v85=v93[3];else v91[v173 + 3 ]=v174;end end elseif (v94>25) then v91[v93[2]]=v93[3];else v91[v93[2]]=v63[v93[3]];end elseif (v94   
  <=28) then if (v94>(998 -(140 + 831))) then local v180=v93[2];local v181,v182=v84(v91[v180](v91[v180 + 1 ]));v86=(v182 + v180) -1 ;local v183=0 -0 ;for v358=v180,v86 do   
  local v359=0;while true do if (v359==0) then v183=v183 + 1 ;v91[v358]=v181[v183];break;end end end else local v184=v93[1189 -(1069 + 118) ];v91[v184](v21(v91,v184 + 1 ,   
  v86));end elseif (v94==29) then local v185=v93[1852 -(1409 + 441) ];local v186,v187=v84(v91[v185]());v86=(v187 + v185) -(719 -(15 + 703)) ;local v188=0;for v360=v185,v86  
   do v188=v188 + 1 + 0 ;v91[v360]=v186[v188];end else local v189=0;while true do if (0==v189) then v91[v93[2]]=v93[441 -(262 + 176) ]~=0 ;v85=v85 + 1 ;break;end end end    
  elseif (v94<=45) then if (v94<=37) then if (v94<=33) then if (v94<=31) then local v139=v93[2];do return v21(v91,v139,v139 + v93[1724 -(345 + 1376) ] );end elseif (v94==(  
  720 -(198 + 490))) then if (v91[v93[2]]==v93[4]) then v85=v85 + 1 ;else v85=v93[3];end else local v190=v93[4 -2 ];v91[v190](v21(v91,v190 + 1 ,v86));end elseif (v94<=(76   
  -41)) then if (v94>34) then v91[v93[2]]=v91[v93[3]] + v93[4] ;else v91[v93[2]]= -v91[v93[1 + 2 ]];end elseif (v94==36) then local v193=0;local v194;local v195;while true  
   do if (v193==0) then v194=v93[3];v195=v91[v194];v193=1;end if (1==v193) then for v471=v194 + 1 ,v93[6 -2 ] do v195=v195   .. v91[v471] ;end v91[v93[2 + 0 ]]=v195;break;  
  end end else v91[v93[2]]=v62[v93[3]];end elseif (v94<=(98 -57)) then if (v94<=39) then if (v94==38) then if  not v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end else    
  local v198=v93[1208 -(696 + 510) ];local v199=v91[v198];for v363=v198 + (1 -0) ,v86 do v15(v199,v91[v363]);end end elseif (v94==(831 -(368 + 423))) then local v200=0;     
  local v201;local v202;local v203;local v204;while true do if (v200==0) then v201=v93[6 -4 ];v202,v203=v84(v91[v201]());v200=1;end if (v200==1) then v86=(v203 + v201) -(   
  19 -(10 + 8)) ;v204=0;v200=2;end if (v200==2) then for v472=v201,v86 do local v473=0;while true do if (0==v473) then v204=v204 + 1 ;v91[v472]=v202[v204];break;end end   
  end break;end end elseif (v91[v93[2]]==v93[15 -11 ]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v94<=43) then if (v94>42) then v91[v93[2]]=v91[v93[3]] + v93[4] ;     
  else do return;end end elseif (v94==44) then if (v91[v93[2]]~=v93[1266 -(1091 + 171) ]) then v85=v85 + 1 ;else v85=v93[3];end elseif (v93[2]<=v91[v93[4]]) then v85=v85  
     + 1 + 0 ;else v85=v93[3];end elseif (v94<=53) then if (v94<=49) then if (v94<=47) then if (v94>46) then if (v91[v93[444 -(416 + 26) ]]==v91[v93[4]]) then v85=v85 +   
    1 ;else v85=v93[9 -6 ];end else local v206=v93[2];local v207=v93[4];local v208=v206 + 2 ;local v209={v91[v206](v91[v206 + 1 ],v91[v208])};for v364=1,v207 do v91[v208  
     + v364 ]=v209[v364];end local v210=v209[1];if v210 then v91[v208]=v210;v85=v93[9 -6 ];else v85=v85 + (375 -(123 + 251)) ;end end elseif (v94>(153 -105)) then local   
    v211=0;local v212;while true do if (v211==0) then v212=v93[2];v91[v212]=v91[v212](v21(v91,v212 + 1 ,v93[2 + 1 ]));break;end end else local v213=0;local v214;while     
      true do if (v213==0) then v214=v93[2];do return v91[v214](v21(v91,v214 + 1 ,v93[3]));end break;end end end elseif (v94<=(253 -202)) then if (v94>50) then v91[v93  
      [2]]=v91[v93[3]] * v93[4] ;else local v216=v93[700 -(208 + 490) ];local v217={};for v367=1, #v90 do local v368=v90[v367];for v397=0, #v368 do local v398=0;local   
      v399;local v400;local v401;while true do if (v398==0) then v399=v368[v397];v400=v399[1 + 0 ];v398=1;end if (v398==1) then v401=v399[2];if ((v400==v91) and (v401   
        >=v216)) then local v520=0;while true do if (v520==0) then v217[v401]=v400[v401];v399[1]=v217;break;end end end break;end end end end end elseif (v94>52) then   
        if (v91[v93[2]]~=v93[4]) then v85=v85 + 1 ;else v85=v93[3];end else local v218=0;local v219;while true do if (v218==0) then v219=v93[3 -1 ];v91[v219](v91[v219   
        + 1 ]);break;end end end elseif (v94<=57) then if (v94<=55) then if (v94==54) then local v220=0;local v221;local v222;local v223;local v224;while true do if (   
          v220==1) then v86=(v223 + v221) -1 ;v224=0 + 0 ;v220=2;end if (v220==2) then for v474=v221,v86 do local v475=0;while true do if (0==v475) then v224=v224 +   
            (439 -(145 + 293)) ;v91[v474]=v222[v224];break;end end end break;end if (v220==0) then v221=v93[2];v222,v223=v84(v91[v221](v91[v221 + 1 ]));v220=1;end     
              end else local v225=0;local v226;while true do if (v225==0) then v226=v93[2];v91[v226](v91[v226 + 1 ]);break;end end end elseif (v94>56) then if v91[    
                v93[2]] then v85=v85 + 1 ;else v85=v93[3];end else local v227=v93[2];local v228,v229=v84(v91[v227](v21(v91,v227 + 1 ,v86)));v86=(v229 + v227) -1 ;     
                  local v230=430 -(44 + 386) ;for v369=v227,v86 do local v370=0;while true do if (0==v370) then v230=v230 + 1 ;v91[v369]=v228[v230];break;end end    
                      end end elseif (v94<=59) then if (v94==(1544 -(998 + 488))) then local v231=0;local v232;while true do if (v231==0) then v232=v93[2];do        
                                  return v21(v91,v232,v86);end break;end end else v91[v93[1 + 1 ]]=v93[3]~=0 ;end elseif (v94==60) then do return v91[v93[1 + 1 ]](  
                                      );end else local v234=0;local v235;local v236;local v237;local v238;while true do if (v234==0) then v235=v93[2];v236,v237=v84  
                                      (v91[v235](v21(v91,v235 + (203 -(14 + 188)) ,v93[3])));v234=1         ;end if (v234==1) then v86=(v237 + v235) -(676 -(534 +   
                                      141)) ;v238=0;v234=2;end if (v234==2) then for v478=v235,v86          do v238=v238 + 1 ;v91[v478]=v236[v238];end break;end   
                                      end end elseif (v94<=92) then if (v94<=76) then if (v94<=68)          then if (v94<=64) then if (v94<=62) then if (v93[1 +   
                                      1 ]<=v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3 + 0 ];end          elseif (v94==63) then if (v91[v93[774 -(201 + 571) ]]  
                                      ==v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end else               local v240=0;local v241;while true do if (v240==0)   
                                      then v241=v91[v93[4]];if  not v241 then v85=v85 + 1 ;else v91           [v93[2]]=v241;v85=v93[3];end break;end end end       
                                      elseif (v94<=66) then if (v94==65) then v91[v93[2]]=v91[v93[3           ]];else v85=v93[3];end elseif (v94==67) then       
                                        local v245=0;local v246;while true do if (v245==0) then               v246=v93[2];v91[v246](v21(v91,v246 + 1 ,v93[3]));  
                                        break;end end else v85=v93[3];end elseif (v94<=72) then if              (v94<=70) then if (v94>69) then local v248=0;    
                                        local v249;local v250;while true do if (v248==1) then v91[              v249 + 1 ]=v250;v91[v249]=v250[v93[1142 -(116  
                                         + 1022) ]];break;end if (v248==0) then v249=v93[2 + 0 ];               v250=v91[v93[3]];v248=1;end end elseif (v91[   
                                        v93[2]]<=v93[4]) then v85=v85 + 1 ;else v85=v93[3];end                    elseif (v94==(295 -224)) then local v251=  
                                        0;local v252;local v253;local v254;while true do if (v251                 ==1) then v254=v91[v252 + 2 ];if (v254>0)  
                                           then if (v253>v91[v252 + 1 ]) then v85=v93[3];else v91                   [v252 + 3 ]=v253;end elseif (v253<v91  
                                          [v252 + 1 ]) then v85=v93[3];else v91[v252 + 3 ]=v253                       ;end break;end if (v251==0)      
                                            then v252=v93[2];v253=v91[v252];v251=1;end end else                          local v255=v93[2];local   
                                            v256={v91[v255](v21(v91,v255 + 1 ,v86))};local                                    v257=0;for   
                                              v371=v255,v93[3 + 1 ] do v257=v257 + 1 ;v91[   
                                                v371]=v256[v257];end end elseif (v94<=74)  
                                                     then if (v94>73) then v91[v93[2]][  
                                                          v93[3]]=v93[4];else do   


--------------------------------------------------------------------------------
return v91[v93[2]];end end elseif (v94>75) then v91[v93[7 -5 ]][v93[3]]=v93[4 + 0 ];elseif (v91[v93[2]]<v91[v93[4]]) then v85=v93[3];else v85=v85 + 1 ;end elseif (v94<=84) then if (v94<=80) then if (v94<=78) then if (v94==77) then v91[v93[2]]=v93[3] + v91[v93[8 -4 ]] ;else local v263=v93[2];do return v91[v263](v21(v91,v263 + 1 ,v93[3]));end end elseif (v94>79) then for v374=v93[2],v93[3] do v91[v374]=nil;end else v91[v93[2]]=v91[v93[3]];end elseif (v94<=(291 -209)) then if (v94>81) then v91[v93[2]]=v91[v93[3]] -v91[v93[4]] ;else v91[v93[2]]={};end elseif (v94>(131 -48)) then v62[v93[3]]=v91[v93[2]];else v91[v93[2]]=v91[v93[8 -5 ]][v91[v93[4]]];end elseif (v94<=(947 -(814 + 45))) then if (v94<=86) then if (v94==85) then v91[v93[2]]=v91[v93[2 + 1 ]]%v93[4] ;else v91[v93[398 -(115 + 281) ]]=v91[v93[3]] -v93[4] ;end elseif (v94==87) then local v274=v91[v93[4]];if  not v274 then v85=v85 + 1 ;else local v407=0;while true do if (v407==0) then v91[v93[4 -2 ]]=v274;v85=v93[3];break;end end end else v91[v93[2]]=v91[v93[3]] * v91[v93[4]] ;end elseif (v94<=90) then if (v94>89) then v91[v93[2]]=v91[v93[3]]%v91[v93[4]] ;else local v277=v93[2];v91[v277](v21(v91,v277 + (2 -1) ,v93[1 + 2 ]));end elseif (v94>91) then v91[v93[2]]=v93[3]~=(0 + 0) ;else local v279=v93[3];local v280=v91[v279];for v376=v279 + 1 ,v93[4] do v280=v280   .. v91[v376] ;end v91[v93[2]]=v280;end elseif (v94<=108) then if (v94<=100) then if (v94<=96) then if (v94<=94) then if (v94==93) then v91[v93[2]]=v91[v93[888 -(261 + 624) ]]/v93[4] ;else local v283=0;local v284;local v285;local v286;local v287;while true do if (v283==1) then v86=(v286 + v284) -1 ;v287=0 + 0 ;v283=2;end if (2==v283) then for v481=v284,v86 do local v482=0;while true do if (0==v482) then v287=v287 + 1 ;v91[v481]=v285[v287];break;end end end break;end if (v283==0) then v284=v93[2];v285,v286=v84(v91[v284](v21(v91,v284 + 1 ,v93[3])));v283=1;end end end elseif (v94>(229 -134)) then local v288=0;while true do if (v288==0) then v91[v93[2]]=v93[4 -1 ]~=(0 -0) ;v85=v85 + 1 ;break;end end else local v289=0;local v290;local v291;local v292;while true do if (v289==2) then for v483=1,v93[4] do v85=v85 + (1 -0) ;local v484=v81[v85];if (v484[1]==(110 -31)) then v292[v483-1 ]={v91,v484[3]};else v292[v483-1 ]={v62,v484[3]};end v90[ #v90 + (2 -1) ]=v292;end v91[v93[2]]=v41(v290,v291,v63);break;end if (v289==1) then v292={};v291=v18({},{[v7("\61\64\66\0\119\7\103","\19\98\31\43\110")]=function(v486,v487)local v488=0;local v489;while true do if (v488==0) then v489=v292[v487];return v489[1][v489[2]];end end end,[v7("\57\32\92\194\187\123\133\2\26\74","\235\102\127\50\167\204\18")]=function(v490,v491,v492)local v493=0;local v494;while true do if (0==v493) then v494=v292[v491];v494[1][v494[2]]=v492;break;end end end});v289=2;end if (v289==0) then v290=v82[v93[870 -(550 + 317) ]];v291=nil;v289=1;end end end elseif (v94<=98) then if (v94==97) then local v293=0;local v294;while true do if (v293==0) then v294=v93[2];v91[v294]=v91[v294](v21(v91,v294 + 1 ,v93[3]));break;end end else local v295=0;local v296;local v297;while true do if (v295==0) then v296=v93[2];v297=v91[v93[3]];v295=1;end if (v295==1) then v91[v296 + 1 ]=v297;v91[v296]=v297[v93[4]];break;end end end elseif (v94>99) then local v298=v93[2];local v299=v91[v298 + 2 ];local v300=v91[v298] + v299 ;v91[v298]=v300;if (v299>(285 -(134 + 151))) then if (v300<=v91[v298 + 1 ]) then v85=v93[1668 -(970 + 695) ];v91[v298 + (5 -2) ]=v300;end elseif (v300>=v91[v298 + 1 ]) then local v497=0;while true do if (v497==0) then v85=v93[1083 -(1020 + 60) ];v91[v298 + 3 ]=v300;break;end end end else v91[v93[1425 -(630 + 793) ]]=v63[v93[3]];end elseif (v94<=104) then if (v94<=102) then if (v94>(350 -249)) then if (v91[v93[6 -4 ]]<=v93[4]) then v85=v85 + 1 ;else v85=v93[3];end else v91[v93[2]]=v91[v93[3]] -v93[4] ;end elseif (v94==103) then for v377=v93[2],v93[3] do v91[v377]=nil;end else v91[v93[2]]=v91[v93[3]]%v93[4] ;end elseif (v94<=106) then if (v94>105) then local v306=v93[2];local v307=v93[4];local v308=v306 + 2 ;local v309={v91[v306](v91[v306 + 1 ],v91[v308])};for v379=1,v307 do v91[v308 + v379 ]=v309[v379];end local v310=v309[1];if v310 then local v409=0;while true do if (v409==0) then v91[v308]=v310;v85=v93[3];break;end end else v85=v85 + 1 ;end elseif v91[v93[2]] then v85=v85 + 1 ;else v85=v93[3];end elseif (v94>(134 -27)) then if (v91[v93[7 -5 ]]~=v91[v93[4]]) then v85=v85 + 1 ;else v85=v93[3];end else local v311=0;local v312;local v313;local v314;local v315;while true do if (v311==1) then v86=(v314 + v312) -(1 -0) ;v315=0;v311=2;end if (v311==2) then for v498=v312,v86 do v315=v315 + 1 ;v91[v498]=v313[v315];end break;end if (v311==0) then v312=v93[2];v313,v314=v84(v91[v312](v21(v91,v312 + (1825 -(1195 + 629)) ,v86)));v311=1;end end end elseif (v94<=116) then if (v94<=(530 -418)) then if (v94<=110) then if (v94==(43 + 66)) then v91[v93[243 -(187 + 54) ]]=v41(v82[v93[9 -6 ]],nil,v63);else v91[v93[1749 -(760 + 987) ]]= #v91[v93[3]];end elseif (v94==111) then local v318=v93[2];v91[v318]=v91[v318](v21(v91,v318 + 1 ,v86));else local v320=0;local v321;local v322;local v323;while true do if (v320==1) then v323=v91[v321] + v322 ;v91[v321]=v323;v320=2;end if (v320==0) then v321=v93[1915 -(1789 + 124) ];v322=v91[v321 + 2 ];v320=1;end if (v320==2) then if (v322>0) then if (v323<=v91[v321 + (767 -(745 + 21)) ]) then local v534=0;while true do if (v534==0) then v85=v93[3];v91[v321 + 3 ]=v323;break;end end end elseif (v323>=v91[v321 + 1 ]) then local v535=0;while true do if (v535==0) then v85=v93[3];v91[v321 + 3 ]=v323;break;end end end break;end end end elseif (v94<=(40 + 74)) then if (v94>113) then v91[v93[2]][v93[3]]=v91[v93[4]];else v91[v93[2]]=v41(v82[v93[7 -4 ]],nil,v63);end elseif (v94>115) then v91[v93[7 -5 ]]=v91[v93[3 + 0 ]] * v91[v93[4]] ;else local v328=v93[2];v91[v328]=v91[v328]();end elseif (v94<=(80 + 40)) then if (v94<=(251 -133)) then if (v94>117) then v91[v93[2]]=v91[v93[3]] * v93[4] ;else v91[v93[2]]=v91[v93[3]]%v91[v93[1 + 3 ]] ;end elseif (v94==(94 + 25)) then local v332=0;local v333;while true do if (v332==0) then v333=v93[2];v91[v333]=v91[v333](v91[v333 + 1 ]);break;end end else local v334=v93[2];v91[v334]=v91[v334](v21(v91,v334 + 1 ,v86));end elseif (v94<=(204 -82)) then if (v94>121) then local v336=0;local v337;local v338;while true do if (v336==1) then for v501=v337 + 1 ,v86 do v15(v338,v91[v501]);end break;end if (v336==0) then v337=v93[2];v338=v91[v337];v336=1;end end else do return v91[v93[2]];end end elseif (v94==123) then v91[v93[2]]=v91[v93[3]][v91[v93[4]]];else local v341=0;local v342;local v343;while true do if (v341==1) then for v502=1, #v90 do local v503=0;local v504;while true do if (v503==0) then v504=v90[v502];for v537=0, #v504 do local v538=0;local v539;local v540;local v541;while true do if (v538==1) then v541=v539[2];if ((v540==v91) and (v541>=v342)) then v343[v541]=v540[v541];v539[1]=v343;end break;end if (v538==0) then v539=v504[v537];v540=v539[1637 -(1373 + 263) ];v538=1;end end end break;end end end break;end if (v341==0) then v342=v93[1 + 1 ];v343={};v341=1;end end end v85=v85 + (1001 -(451 + 549)) ;break;end end end end;end return v41(v40(),{},v28)(...);end if (v29==6) then v40=nil;function v40()local v67=0;local v68;local v69;local v70;local v71;local v72;local v73;while true do if (v67==2) then for v112=2 -1 ,v35() do local v113=0;local v114;while true do if (v113==0) then v114=v33();if (v32(v114,1 + 0 ,1)==(0 + 0)) then local v124=0;local v125;local v126;local v127;while true do if (v124==0) then v125=v32(v114,2,880 -(282 + 595) );v126=v32(v114,4,6);v124=1;end if (v124==3) then if (v32(v126,3,3)==1) then v127[4]=v73[v127[4]];end v68[v112]=v127;break;end if (v124==1) then v127={v34(),v34(),nil,nil};if (v125==0) then local v131=0;while true do if (v131==0) then v127[3]=v34();v127[4]=v34();break;end end elseif (v125==1) then v127[3]=v35();elseif (v125==(1 + 1)) then v127[3 + 0 ]=v35() -(2^16) ;elseif (v125==(6 -3)) then v127[3]=v35() -(2^(30 -(9 + 5))) ;v127[380 -(85 + 291) ]=v34();end v124=2;end if (v124==2) then if (v32(v126,1,1)==1) then v127[2]=v73[v127[2]];end if (v32(v126,1267 -(243 + 1022) ,2)==1) then v127[3]=v73[v127[11 -8 ]];end v124=3;end end end break;end end end for v115=1,v35() do v69[v115-1 ]=v40();end return v71;end if (0==v67) then v68={};v69={};v70={};v71={v68,v69,nil,v70};v67=1;end if (v67==1) then v72=v35();v73={};for v117=1,v72 do local v118=0;local v119;local v120;while true do if (v118==0) then v119=v33();v120=nil;v118=1;end if (v118==1) then if (v119==1) then v120=v33()~=0 ;elseif (v119==2) then v120=v36();elseif (v119==(4 -1)) then v120=v37();end v73[v117]=v120;break;end end end v71[3]=v33();v67=2;end end end v41=nil;v29=7;end if (v29==5) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==2) then function v33()local v74=0;local v75;while true do if (v74==1) then return v75;end if (v74==0) then v75=v9(v27,v30,v30);v30=v30 + (2 -1) ;v74=1;end end end v34=nil;function v34()local v76=0;local v77;local v78;while true do if (v76==1) then return (v78 * 256) + v77 ;end if (v76==0) then v77,v78=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v76=1;end end end v29=3;end end end vv17(),...);
