 
                                                                                local v0=string.char;  
                                                                        local v1=string.byte;local v2=string.sub;local   
                                                                    v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local  
                                                                 v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24  
                                                             do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41  
                                                          % #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.   
                                                        byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=       
                                                      string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=   
                                                    getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select  
                                                  ;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;  
                                                  local v30;v27=v12(v11(v27,15 -10 ),v7("\69\6","\83\107\40\46\93\101\161\34"),function(v42)if (v9(    
                                                v42,2)==79) then local v89=0;while true do if (v89==0) then v30=v8(v11(v42,1,1));return "";end end else  
                                                 local v90=0;local v91;while true do if (v90==0) then v91=v10(v8(v42,16));if v30 then local v123=v13(v91,  
                                              v30);v30=nil;return v123;else return v91;end break;end end end end);local function v31(v43,v44,v45)if v45      
                                              then local v92=0;local v93;while true do if (v92==0) then v93=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1))   
                                            ;return v93-(v93%1) ;end end else local v94=2^(v44-(2 -1)) ;return (((v43%(v94 + v94))>=v94) and (1 -0)) or 0 ;    
                                            end end local function v32()local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;   
                                          v46=1;end if (v46==1) then return v47;end end end local function v33()local v48=0;local v49;local v50;while true do if   
                                          (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end   
                                          local function v34()local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(   
                                          v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end   
                                        end end local function v35()local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==1)    
                                        then v59=1;v60=(v31(v58,2 -1 ,20) * (2^32)) + v57 ;v56=2;end if (2==  --[[==============================]]v56) then v61=v31(v58,   
                                        21,31);v62=((v31(v58,32)==(620 -(555 + 64))) and  -1) or 1  --[[============================================]];v56=3;end if (3==   
                                        v56) then if (v61==0) then if (v60==0) then return v62  --[[======================================================]]* 0 ;else local  
                                       v124=0;while true do if (v124==0) then v61=1;v59=0;  --[[==========================================================]]break;end end end  
                                       elseif (v61==2047) then return ((v60==0) and (v62  --[[==============================================================]]* (1/0))) or (   
                                      v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 +  --[[================================================================]](v60/(2^(983 -(  
                                      857 + 74))))) ;end if (v56==0) then v57=v34();v58=  --[[==================================================================]]v34();v56=1;   
                                      end end end local function v36(v63)local v64=0;     --[[==================================================================]]local v65;local    
                                     v66;while true do if (v64==2) then v66={};for v102=1 --[[====================================================================]], #v65 do v66  
                    [v102]=v10(v9(v11(v65,v102,v102)));end v64=3;end if (v64==3) then     --[[====================================================================]]return v14(v66)  
              ;end if (v64==1) then v65=v11(v27,v29,(v29 + v63) -(928 -(214 + 713)) );v29 --[[======================================================================]]=v29 + v63 ;   
            v64=2;end if (v64==0) then v65=nil;if  not v63 then local v118=0;while true   --[[======================================================================]]do if (v118==  
          0) then v63=v34();if (v63==(568 -(367 + 201))) then return "";end break;end end --[[======================================================================]] end v64=1;    
        end end end local v37=v34;local function v38(...)return {...},v20("#",...);end    --[[======================================================================]]local          
        function v39()local v67={};local v68={};local v69={};local v70={v67,v68,nil,v69}; --[[======================================================================]]local v71=v34  
      ();local v72={};for v81=1,v71 do local v82=v32();local v83;if (v82==(1 + 0)) then   --[[======================================================================]]v83=v32()~=0   
      ;elseif (v82==2) then v83=v35();elseif (v82==3) then v83=v36();end v72[v81]=v83;end   --[[==================================================================]]v70[880 -(282 +  
       595) ]=v32();for v85=1,v34() do local v86=v32();if (v31(v86,1,1638 -(1523 + 114) )== --[[================================================================]]0) then local v95  
    =0;local v96;local v97;local v98;while true do if (2==v95) then if (v31(v97,1,1)==1)    --[[==============================================================]]then v98[2]=v72[   
    v98[1272 -(226 + 1044) ]];end if (v31(v97,2,8 -6 )==1) then v98[3]=v72[v98[3]];end v95=3; --[[==========================================================]]end if (v95==1)      
    then v98={v33(),v33(),nil,nil};if (v96==0) then v98[3]=v33();v98[4 + 0 ]=v33();elseif (v96  --[[====================================================]]==(1 -0)) then v98[3]=   
    v34();elseif (v96==2) then v98[3]=v34() -(2^16) ;elseif (v96==3) then v98[3]=v34() -((1067 -( --[[==============================================]]68 + 997))^16) ;v98[4]=    
    v33();end v95=2;end if (v95==0) then v96=v31(v86,2,3);v97=v31(v86,4,6);v95=1;end if (3==v95) then --[[====================================]] if (v31(v97,120 -(32 + 85) ,  
    3)==1) then v98[4]=v72[v98[4]];end v67[v85]=v98;break;end end end end for v87=1,v34() do v68[v87-1 ]= --[[========================]]v39();end return v70;end local         
    function v40(v74,v75,v76)local v77=0;local v78;local v79;local v80;while true do if (1==v77) then v80=v74[3];return function(...)local v104=v78;local v105=v79;local     
  v106=v80;local v107=v38;local v108=1;local v109= -1;local v110={};local v111={...};local v112=v20("#",...) -1 ;local v113={};local v114={};for v119=0,v112 do if (v119   
  >=v106) then v110[v119-v106 ]=v111[v119 + 1 ];else v114[v119]=v111[v119 + 1 ];end end local v115=(v112-v106) + 1 ;local v116;local v117;while true do v116=v104[v108]  
  ;v117=v116[1];if (v117<=61) then if (v117<=30) then if (v117<=14) then if (v117<=6) then if (v117<=2) then if (v117<=0) then if (v114[v116[2]]~=v116[4]) then v108=v108  
   + 1 ;else v108=v116[3];end elseif (v117>(1 + 0)) then do return v114[v116[2]]();end else local v145=v116[2];do return v21(v114,v145,v109);end end elseif (v117<=4)      
  then if (v117>3) then local v146=v116[2];local v147={v114[v146](v21(v114,v146 + 1 ,v109))};local v148=0;for v348=v146,v116[4] do local v349=0;while true do if (v349==0  
  ) then v148=v148 + 1 ;v114[v348]=v147[v148];break;end end end else v75[v116[3]]=v114[v116[2]];end elseif (v117>(2 + 3)) then local v151=0;local v152;local v153;while    
  true do if (v151==1) then v114[v152 + 1 ]=v153;v114[v152]=v153[v116[961 -(892 + 65) ]];break;end if (0==v151) then v152=v116[2];v153=v114[v116[3]];v151=1;end end else   
  local v154=v116[4 -2 ];v114[v154]=v114[v154](v114[v154 + 1 ]);end elseif (v117<=10) then if (v117<=8) then if (v117==7) then local v156=0;local v157;local v158;local    
  v159;local v160;while true do if (0==v156) then v157=v116[2];v158,v159=v107(v114[v157](v114[v157 + 1 ]));v156=1;end if (v156==1) then v109=(v159 + v157) -1 ;v160=0;     
  v156=2;end if (v156==2) then for v446=v157,v109 do local v447=0;while true do if (0==v447) then v160=v160 + 1 ;v114[v446]=v158[v160];break;end end end break;end end     
  else v114[v116[2]]=v40(v105[v116[3]],nil,v76);end elseif (v117>9) then v114[v116[3 -1 ]]=v116[3];else v114[v116[2]]=v40(v105[v116[4 -1 ]],nil,v76);end elseif (v117<=12  
  ) then if (v117==11) then local v165=v116[2];v114[v165](v21(v114,v165 + 1 ,v109));else v114[v116[2]]=v75[v116[3]];end elseif (v117>13) then v114[v116[2]][v116[3]]=v114[   
  v116[4]];else local v170=v116[2];v114[v170]=v114[v170](v21(v114,v170 + 1 ,v116[3]));end elseif (v117<=22) then if (v117<=(368 -(87 + 263))) then if (v117<=16) then if (   
  v117>15) then if (v116[2]==v114[v116[4]]) then v108=v108 + 1 ;else v108=v116[3];end elseif (v116[2]<=v114[v116[4]]) then v108=v108 + 1 ;else v108=v116[3];end elseif (     
  v117==17) then if v114[v116[2]] then v108=v108 + 1 ;else v108=v116[3];end else local v172=0;local v173;local v174;local v175;local v176;while true do if (2==v172) then    
  for v448=v173,v109 do local v449=0;while true do if (0==v449) then v176=v176 + 1 ;v114[v448]=v174[v176];break;end end end break;end if (v172==0) then v173=v116[2];v174,   
  v175=v107(v114[v173](v114[v173 + 1 ]));v172=1;end if (1==v172) then v109=(v175 + v173) -1 ;v176=0;v172=2;end end end elseif (v117<=20) then if (v117==19) then local v177  
  =0;local v178;while true do if (v177==0) then v178=v114[v116[4]];if  not v178 then v108=v108 + 1 ;else local v495=0;while true do if (v495==0) then v114[v116[2]]=v178;    
  v108=v116[3];break;end end end break;end end else v114[v116[2]]=v114[v116[183 -(67 + 113) ]][v114[v116[4]]];end elseif (v117>21) then local v181=0;local v182;while true   
  do if (v181==0) then v182=v116[2 + 0 ];v114[v182]=v114[v182](v21(v114,v182 + (2 -1) ,v109));break;end end else v114[v116[2]]=v114[v116[3]]/v116[4] ;end elseif (v117<=26)  
   then if (v117<=(18 + 6)) then if (v117==23) then local v184=0;local v185;local v186;local v187;while true do if (v184==1) then v187=v114[v185 + 2 ];if (v187>0) then if   
  (v186>v114[v185 + 1 ]) then v108=v116[3];else v114[v185 + 3 ]=v186;end elseif (v186<v114[v185 + 1 ]) then v108=v116[3];else v114[v185 + 3 ]=v186;end break;end if (v184==  
  0) then v185=v116[2];v186=v114[v185];v184=1;end end else local v188=v116[2];local v189,v190=v107(v114[v188](v21(v114,v188 + 1 ,v116[3])));v109=(v190 + v188) -(3 -2) ;     
  local v191=0;for v350=v188,v109 do local v351=0;while true do if (v351==0) then v191=v191 + 1 ;v114[v350]=v189[v191];break;end end end end elseif (v117>25) then local     
  v192=v116[2];local v193=v116[4];local v194=v192 + (954 -(802 + 150)) ;local v195={v114[v192](v114[v192 + 1 ],v114[v194])};for v352=2 -1 ,v193 do v114[v194 + v352 ]=     
  v195[v352];end local v196=v195[1];if v196 then local v382=0;while true do if (0==v382) then v114[v194]=v196;v108=v116[3];break;end end else v108=v108 + 1 ;end else      
  local v197=v116[2];local v198=v114[v116[3]];v114[v197 + 1 ]=v198;v114[v197]=v198[v116[4]];end elseif (v117<=28) then if (v117==27) then local v202=0;local v203;while    
    true do if (v202==0) then v203=v116[2];v114[v203]=v114[v203](v114[v203 + 1 ]);break;end end else v114[v116[2]]=v114[v116[5 -2 ]]%v116[4] ;end elseif (v117==29) then   
    v114[v116[2]]= -v114[v116[3]];else v114[v116[2]]={};end elseif (v117<=45) then if (v117<=37) then if (v117<=33) then if (v117<=31) then local v141=v116[2];do return   
    v21(v114,v141,v141 + v116[3] );end elseif (v117==32) then v114[v116[2]]=v114[v116[3]] + v116[3 + 1 ] ;else v114[v116[2]][v116[3]]=v116[4];end elseif (v117<=35) then   
    if (v117>34) then v114[v116[2]]=v114[v116[3]]%v114[v116[4]] ;elseif (v114[v116[2]]~=v116[4]) then v108=v108 + 1 ;else v108=v116[3];end elseif (v117>36) then v114[     
      v116[2]]=v114[v116[1000 -(915 + 82) ]]/v116[4] ;else v114[v116[5 -3 ]]=v114[v116[3]][v116[4]];end elseif (v117<=41) then if (v117<=39) then if (v117>38) then do   
      return;end else local v214=0;local v215;local v216;local v217;while true do if (v214==1) then v217={};v216=v18({},{[v7("\191\17\225\3\210\133\54",                 
      "\182\224\78\136\109")]=function(v452,v453)local v454=0;local v455;while true do if (v454==0) then v455=v217[v453];return v455[1][v455[2]];end end end,[v7(        
        "\228\221\140\251\204\235\140\250\222\250","\158\187\130\226")]=function(v456,v457,v458)local v459=0;local v460;while true do if (0==v459) then v460=v217[v457]  
        ;v460[1][v460[2]]=v458;break;end end end});v214=2;end if (v214==0) then v215=v105[v116[3]];v216=nil;v214=1;end if (2==v214) then for v461=1,v116[3 + 1 ] do      
        local v462=0;local v463;while true do if (v462==1) then if (v463[1]==113) then v217[v461-1 ]={v114,v463[3]};else v217[v461-1 ]={v75,v463[3]};end v113[ #v113 +   
          (1188 -(1069 + 118)) ]=v217;break;end if (v462==0) then v108=v108 + 1 ;v463=v104[v108];v462=1;end end end v114[v116[2]]=v40(v215,v216,v76);break;end end     
            end elseif (v117==40) then if (v114[v116[2]]==v116[4]) then v108=v108 + (2 -1) ;else v108=v116[6 -3 ];end else local v218=v116[2];v114[v218]=v114[v218](   
              v21(v114,v218 + 1 + 0 ,v109));end elseif (v117<=43) then if (v117>42) then local v220=v116[2];local v221,v222=v107(v114[v220]());v109=(v222 + v220) -1   
                ;local v223=0;for v355=v220,v109 do local v356=0;while true do if (v356==0) then v223=v223 + 1 ;v114[v355]=v221[v223];break;end end end elseif (v114[  
                  v116[2]]<=v116[4]) then v108=v108 + 1 ;else v108=v116[4 -1 ];end elseif (v117>44) then if (v114[v116[2]]<v114[v116[4 + 0 ]]) then v108=v116[3];    
                      else v108=v108 + 1 ;end elseif (v114[v116[2]]==v114[v116[4]]) then v108=v108 + 1 ;else v108=v116[3];end elseif (v117<=(844 -(368 + 423)))      
                                  then if (v117<=(153 -104)) then if (v117<=47) then if (v117>46) then v114[v116[2]]=v114[v116[3]] -v114[v116[4]] ;else local v225=  
                                      0;local v226;local v227;while true do if (v225==0) then v226=v116[21 -(10 + 8) ];v227=v114[v226];v225=1;end if (v225==1) then  
                                       for v466=v226 + 1 ,v116[4] do v227=v227   .. v114[v466] ;end          v114[v116[2]]=v227;break;end end end elseif (v117>48)   
                                      then v114[v116[2]]=v76[v116[3]];else v114[v116[7 -5 ]]=v114[          v116[445 -(416 + 26) ]][v116[4]];end elseif (v117<=51  
                                      ) then if (v117==50) then v114[v116[2]]=v76[v116[3]];else             v114[v116[2]]= #v114[v116[3]];end elseif (v117==52)    
                                      then do return;end else v114[v116[2]]=v116[3]~=0 ;end elseif          (v117<=57) then if (v117<=55) then if (v117==54) then  
                                       local v236=0;local v237;local v238;while true do if (v236==1           ) then for v467=1, #v113 do local v468=v113[v467];   
                                      for v498=0, #v468 do local v499=0;local v500;local v501;local            v502;while true do if (v499==0) then v500=v468[     
                                      v498];v501=v500[1];v499=1;end if (v499==1) then v502=v500[2];           if ((v501==v114) and (v502>=v237)) then v238[v502  
                                        ]=v501[v502];v500[1]=v238;end break;end end end end break;            end if (v236==0) then v237=v116[2];v238={};v236=1  
                                        ;end end else v114[v116[2]]=v114[v116[3]];end elseif (v117              ==56) then v114[v116[2]]=v114[v116[3]] + v116[4  
                                        ] ;else local v242=v105[v116[3]];local v243;local v244={};              v243=v18({},{[v7("\1\0\240\255\58\58\225",     
                                        "\145\94\95\153")]=function(v357,v358)local v359=0;local                v360;while true do if (v359==0) then v360=     
                                        v244[v358];return v360[1][v360[2]];end end end,[v7(                       "\194\242\26\208\89\190\243\201\17\205",   
                                        "\215\157\173\116\181\46")]=function(v361,v362,v363)local                  v364=0;local v365;while true do if (v364  
                                          ==0) then v365=v244[v362];v365[1][v365[2]]=v363;break;                    end end end});for v366=1,v116[4] do    
                                          local v367=0;local v368;while true do if (v367==0)                          then v108=v108 + 1 ;v368=v104[   
                                            v108];v367=1;end if (v367==1) then if (v368[1]==113                         ) then v244[v366-1 ]={     
                                            v114,v368[3]};else v244[v366-1 ]={v75,v368[3]};                                   end v113[ #  
                                              v113 + 1 ]=v244;break;end end end v114[v116[2  
                                                ]]=v40(v242,v243,v76);end elseif (v117<=   
                                                    59) then if (v117==58) then v114[    
                                                          v116[2]]=v114[v116[3]]%  


--------------------------------------------------------------------------------
v116[4] ;else v114[v116[2]]=v114[v116[3]] * v114[v116[2 + 2 ]] ;end elseif (v117>(106 -46)) then v114[v116[2]]=v116[3] + v114[v116[4]] ;else local v249=0;while true do if (v249==0) then v114[v116[2]]=v116[3]~=0 ;v108=v108 + 1 ;break;end end end elseif (v117<=92) then if (v117<=76) then if (v117<=(506 -(145 + 293))) then if (v117<=64) then if (v117<=62) then if  not v114[v116[2]] then v108=v108 + 1 ;else v108=v116[3];end elseif (v117>63) then local v251=0;local v252;local v253;while true do if (1==v251) then for v474=1, #v113 do local v475=v113[v474];for v503=0, #v475 do local v504=0;local v505;local v506;local v507;while true do if (0==v504) then v505=v475[v503];v506=v505[1];v504=1;end if (v504==1) then v507=v505[2];if ((v506==v114) and (v507>=v252)) then local v548=0;while true do if (v548==0) then v253[v507]=v506[v507];v505[1]=v253;break;end end end break;end end end end break;end if (v251==0) then v252=v116[2];v253={};v251=1;end end else local v254=0;local v255;while true do if (v254==0) then v255=v116[2];v114[v255](v21(v114,v255 + 1 ,v109));break;end end end elseif (v117<=66) then if (v117==(495 -(44 + 386))) then v114[v116[2]]=v114[v116[3]] * v116[4] ;else v114[v116[2]][v116[3]]=v114[v116[4]];end elseif (v117==67) then v114[v116[2]]= #v114[v116[3]];else local v260=v116[3];local v261=v114[v260];for v369=v260 + 1 ,v116[4] do v261=v261   .. v114[v369] ;end v114[v116[2]]=v261;end elseif (v117<=72) then if (v117<=70) then if (v117==69) then if (v114[v116[2]]~=v114[v116[4]]) then v108=v108 + 1 ;else v108=v116[3];end elseif  not v114[v116[2]] then v108=v108 + (1487 -(998 + 488)) ;else v108=v116[3];end elseif (v117==71) then if (v114[v116[2]]~=v114[v116[4]]) then v108=v108 + 1 ;else v108=v116[3];end elseif (v114[v116[2]]<=v116[4]) then v108=v108 + 1 ;else v108=v116[3];end elseif (v117<=74) then if (v117==(24 + 49)) then local v263=0;local v264;while true do if (v263==0) then v264=v116[2];do return v114[v264](v21(v114,v264 + 1 ,v116[3]));end break;end end else v114[v116[2]]=v114[v116[3 + 0 ]] * v116[4] ;end elseif (v117==75) then v114[v116[2]]=v114[v116[3]] -v116[4] ;elseif v114[v116[2]] then v108=v108 + (773 -(201 + 571)) ;else v108=v116[3];end elseif (v117<=84) then if (v117<=80) then if (v117<=78) then if (v117>77) then local v267=0;local v268;local v269;while true do if (1==v267) then for v476=v268 + 1 ,v109 do v15(v269,v114[v476]);end break;end if (v267==0) then v268=v116[2];v269=v114[v268];v267=1;end end elseif (v116[1140 -(116 + 1022) ]==v114[v116[16 -12 ]]) then v108=v108 + 1 ;else v108=v116[2 + 1 ];end elseif (v117>(288 -209)) then if (v114[v116[2]]==v116[4]) then v108=v108 + 1 ;else v108=v116[3];end else v108=v116[10 -7 ];end elseif (v117<=(941 -(814 + 45))) then if (v117==81) then local v271=0;while true do if (v271==0) then v114[v116[2]]=v116[3]~=(0 -0) ;v108=v108 + 1 + 0 ;break;end end else v114[v116[2]]=v114[v116[3]][v114[v116[4]]];end elseif (v117>83) then v114[v116[2]]=v116[3]~=0 ;elseif (v114[v116[2]]<v114[v116[4]]) then v108=v116[3];else v108=v108 + 1 ;end elseif (v117<=88) then if (v117<=86) then if (v117==85) then local v275=v116[2];local v276,v277=v107(v114[v275](v21(v114,v275 + 1 ,v109)));v109=(v277 + v275) -1 ;local v278=0;for v370=v275,v109 do local v371=0;while true do if (v371==0) then v278=v278 + 1 ;v114[v370]=v276[v278];break;end end end else local v279=v116[2];local v280=v116[4];local v281=v279 + 2 ;local v282={v114[v279](v114[v279 + 1 ],v114[v281])};for v372=1,v280 do v114[v281 + v372 ]=v282[v372];end local v283=v282[1];if v283 then v114[v281]=v283;v108=v116[3];else v108=v108 + 1 ;end end elseif (v117>87) then do return v114[v116[1 + 1 ]]();end else v114[v116[2]]=v116[3] + v114[v116[889 -(261 + 624) ]] ;end elseif (v117<=90) then if (v117>89) then local v285=v116[2];v114[v285](v21(v114,v285 + 1 ,v116[3]));else local v286=0;local v287;while true do if (v286==0) then v287=v116[2];v114[v287](v21(v114,v287 + 1 ,v116[3]));break;end end end elseif (v117==91) then v75[v116[3]]=v114[v116[2]];else local v290=v116[2];do return v114[v290](v21(v114,v290 + 1 ,v116[3]));end end elseif (v117<=107) then if (v117<=99) then if (v117<=95) then if (v117<=93) then v114[v116[2]]=v75[v116[3]];elseif (v117==94) then local v291=0;local v292;local v293;while true do if (v291==1) then for v479=v292 + 1 ,v109 do v15(v293,v114[v479]);end break;end if (0==v291) then v292=v116[2];v293=v114[v292];v291=1;end end else local v294=v116[3 -1 ];local v295,v296=v107(v114[v294](v21(v114,v294 + 1 ,v116[1083 -(1020 + 60) ])));v109=(v296 + v294) -1 ;local v297=0;for v375=v294,v109 do local v376=0;while true do if (v376==0) then v297=v297 + 1 ;v114[v375]=v295[v297];break;end end end end elseif (v117<=97) then if (v117>96) then v114[v116[2]][v116[3]]=v116[4];else local v300=0;local v301;while true do if (v300==0) then v301=v116[2];v114[v301]=v114[v301]();break;end end end elseif (v117>(1521 -(630 + 793))) then local v302=0;local v303;local v304;local v305;local v306;while true do if (v302==2) then for v482=v303,v109 do local v483=0;while true do if (v483==0) then v306=v306 + 1 ;v114[v482]=v304[v306];break;end end end break;end if (v302==1) then v109=(v305 + v303) -(3 -2) ;v306=0;v302=2;end if (v302==0) then v303=v116[2];v304,v305=v107(v114[v303]());v302=1;end end else v114[v116[2]]=v114[v116[3]] * v114[v116[18 -14 ]] ;end elseif (v117<=103) then if (v117<=101) then if (v117==100) then v114[v116[2]]= -v114[v116[3]];elseif (v114[v116[2]]==v114[v116[4]]) then v108=v108 + 1 ;else v108=v116[3];end elseif (v117==102) then local v309=v116[2];local v310=v114[v309 + 2 ];local v311=v114[v309] + v310 ;v114[v309]=v311;if (v310>0) then if (v311<=v114[v309 + 1 ]) then v108=v116[3];v114[v309 + 3 ]=v311;end elseif (v311>=v114[v309 + 1 ]) then local v486=0;while true do if (v486==0) then v108=v116[3];v114[v309 + 3 ]=v311;break;end end end elseif (v116[2]<=v114[v116[4]]) then v108=v108 + 1 + 0 ;else v108=v116[3];end elseif (v117<=(361 -256)) then if (v117==104) then local v313=v116[2];local v314=v114[v313 + 2 ];local v315=v114[v313] + v314 ;v114[v313]=v315;if (v314>0) then if (v315<=v114[v313 + 1 ]) then v108=v116[3];v114[v313 + 3 ]=v315;end elseif (v315>=v114[v313 + 1 ]) then v108=v116[3];v114[v313 + 3 ]=v315;end else local v317=v116[2];do return v21(v114,v317,v109);end end elseif (v117>106) then local v318=0;local v319;while true do if (v318==0) then v319=v116[2];v114[v319]=v114[v319]();break;end end else local v320=v116[2];v114[v320]=v114[v320](v21(v114,v320 + 1 ,v116[3]));end elseif (v117<=115) then if (v117<=111) then if (v117<=109) then if (v117>108) then v114[v116[2]]=v116[1750 -(760 + 987) ];else v114[v116[2]]=v114[v116[3]] -v116[4] ;end elseif (v117>110) then local v325=0;local v326;local v327;local v328;while true do if (v325==1) then v328=0;for v491=v326,v116[4] do local v492=0;while true do if (v492==0) then v328=v328 + 1 ;v114[v491]=v327[v328];break;end end end break;end if (v325==0) then v326=v116[2];v327={v114[v326](v21(v114,v326 + 1 ,v109))};v325=1;end end else v114[v116[2]]=v114[v116[1916 -(1789 + 124) ]]%v114[v116[4]] ;end elseif (v117<=113) then if (v117>112) then v114[v116[2]]=v114[v116[3]];else local v332=0;local v333;local v334;local v335;local v336;while true do if (v332==0) then v333=v116[2];v334,v335=v107(v114[v333](v21(v114,v333 + (767 -(745 + 21)) ,v109)));v332=1;end if (v332==1) then v109=(v335 + v333) -1 ;v336=0;v332=2;end if (v332==2) then for v493=v333,v109 do local v494=0;while true do if (v494==0) then v336=v336 + 1 + 0 ;v114[v493]=v334[v336];break;end end end break;end end end elseif (v117==(313 -199)) then local v337=v116[2];v114[v337](v114[v337 + 1 ]);else do return v114[v116[2]];end end elseif (v117<=119) then if (v117<=117) then if (v117==116) then local v338=v114[v116[4]];if  not v338 then v108=v108 + 1 ;else v114[v116[2]]=v338;v108=v116[3];end else v114[v116[2]]=v114[v116[3]] -v114[v116[4]] ;end elseif (v117==118) then v114[v116[2]]={};else local v341=0;local v342;while true do if (v341==0) then v342=v116[2];v114[v342](v114[v342 + 1 ]);break;end end end elseif (v117<=121) then if (v117==120) then for v377=v116[2],v116[11 -8 ] do v114[v377]=nil;end else local v343=0;local v344;local v345;local v346;while true do if (v343==0) then v344=v116[2];v345=v114[v344];v343=1;end if (v343==1) then v346=v114[v344 + 2 ];if (v346>(0 + 0)) then if (v345>v114[v344 + 1 ]) then v108=v116[3];else v114[v344 + 3 ]=v345;end elseif (v345<v114[v344 + 1 ]) then v108=v116[3];else v114[v344 + 3 ]=v345;end break;end end end elseif (v117>122) then v108=v116[3];else do return v114[v116[2]];end end v108=v108 + 1 ;end end;end if (v77==0) then v78=v74[1];v79=v74[2];v77=1;end end end return v40(v39(),{},v28)(...);end vv17(),...);
