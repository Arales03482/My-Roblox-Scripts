--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26=0;local v27;while true do if (v26==1) then return v5(v27);end if (v26==0) then v27={};for v44=1, #v24 do v6(v27,v0(v4(v1(v2(v24,v44,v44 + 1 )),v1(v2(v25,1 + ((v44-1)% #v25) ,1 + ((v44-1)% #v25) + 1 )))%256 ));end v26=1;end end end local v8=_G[v7("\217\163\183\25\142\35\200\190","\173\204\217\108\227\65")];local v9=_G[v7("\38\249\210\87\205\50","\85\141\160\62\163")][v7("\231\53\42\198","\133\76\94\163\182\192")];local v10=_G[v7("\60\50\231\61\40\7","\79\70\149\84\70\96")][v7("\89\229\57\20","\58\141\88\102\109\219\161")];local v11=_G[v7("\64\222\98\19\51\82","\51\170\16\122\93\53\41\72")][v7("\189\167\0","\206\210\98\83\38\26\52")];local v12=_G[v7("\95\82\74\30\41\243","\44\38\56\119\71\148")][v7("\244\252\77\212","\147\143\56\182")];local v13=_G[v7("\58\203\196\136\241\46","\73\191\182\225\159")][v7("\208\199\59","\162\162\75\114")];local v14=_G[v7("\65\138\133\24\7","\53\235\231\116\98")][v7("\63\75\236\80\135\36","\92\36\130\51\230\80\196\121")];local v15=_G[v7("\174\68\170\185\217","\218\37\200\213\188\234")][v7("\122\12\108\78\28\103","\19\98\31\43\110")];local v16=_G[v7("\134\7\11\90","\235\102\127\50\167\204\18")][v7("\34\84\164\237\51","\78\48\193\149\67\36")];local v17=_G[v7("\70\53\10\134\29\79\38","\33\80\126\224\120")] or function()return _ENV;end ;local v18=_G[v7("\79\233\188\14\193\72\237\188\2\198\80\233","\60\140\200\99\164")];local v19=_G[v7("\178\132\245\8\42","\194\231\148\100\70")];local v20=_G[v7("\219\67\64\196\160\226","\168\38\44\161\195\150")];local v21=_G[v7("\3\142\236\131\117\59","\118\224\156\226\22\80\136\214")] or _G[v7("\148\67\236\85\133","\224\34\142\57")][v7("\27\208\183\196\222\120","\110\190\199\165\189\19\145\61")] ;local v22=_G[v7("\211\213\229\98\229\137\194\200","\167\186\139\23\136\235")];local function v23(v28,v29,...)local v30=0;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;local v42;local v43;while true do if (v30==1) then v35=nil;v36=nil;v37=nil;v38=nil;v30=2;end if (2==v30) then v39=nil;v40=nil;v41=nil;v42=nil;v30=3;end if (v30==0) then v31=0;v32=nil;v33=nil;v34=nil;v30=1;end if (v30==3) then v43=nil;while true do local v45=0;while true do if (v45==1) then if (2==v31) then local v46=0;while true do if (v46==0) then function v36()local v52=0;local v53;local v54;local v55;while true do if (v52==0) then v53=0 -0 ;v54=nil;v52=1;end if (v52==1) then v55=nil;while true do local v109=0;while true do if (0==v109) then if (v53==(765 -(468 + 297))) then local v119=0;while true do if (v119==0) then v54,v55=v9(v28,v32,v32 + (564 -(334 + 228)) );v32=v32 + 2 ;v119=1;end if (v119==1) then v53=1;break;end end end if (v53==(3 -2)) then return (v55 * ((1142 -649) -237)) + v54 ;end break;end end end break;end end end v37=nil;v46=1;end if (v46==1) then function v37()local v56=0;local v57;local v58;local v59;local v60;local v61;while true do if (v56==1) then v59=nil;v60=nil;v56=2;end if (2==v56) then v61=nil;while true do local v110=0;while true do if (v110==0) then if (v57==0) then local v120=0;while true do if (v120==0) then v58,v59,v60,v61=v9(v28,v32,v32 + (5 -2) );v32=v32 + 4 ;v120=1;end if (v120==1) then v57=1 + 0 ;break;end end end if (1==v57) then return (v61 * (16777452 -(141 + 95))) + (v60 * 65536) + (v59 * 256) + v58 ;end break;end end end break;end if (v56==0) then v57=0;v58=nil;v56=1;end end end v38=nil;v46=2;end if (v46==2) then v31=3;break;end end end if (v31==5) then local v47=0;while true do if (v47==0) then v43=nil;function v43(v62,v63,v64)local v65=0;local v66;local v67;local v68;local v69;while true do if (v65==1) then v68=nil;v69=nil;v65=2;end if (0==v65) then v66=0;v67=nil;v65=1;end if (v65==2) then while true do local v111=0;while true do if (v111==0) then if (v66==0) then local v121=0;while true do if (1==v121) then v66=1;break;end if (v121==0) then v67=v62[1];v68=v62[2];v121=1;end end end if (v66==1) then local v122=0;while true do if (v122==0) then v69=v62[12 -9 ];return function(...)local v142=0;local v143;local v144;local v145;local v146;local v147;local v148;local v149;local v150;local v151;local v152;local v153;local v154;local v155;local v156;while true do if (1==v142) then v147=1;v148= -1;v149={};v150={...};v142=2;end if (3==v142) then v154=(v151-v145) + 1 ;v155=nil;v156=nil;while true do local v175=0;local v176;while true do if (v175==0) then v176=0;while true do if (v176==1) then if (v156<=63) then if (v156<=31) then if (v156<=15) then if (v156<=7) then if (v156<=3) then if (v156<=1) then if (v156==0) then v153[v155[119 -(32 + 85) ]]=v155[3] + v153[v155[4 + 0 ]] ;else v153[v155[1 + 1 ]]=v153[v155[3]] + v155[4] ;end elseif (v156>2) then local v209=0;local v210;local v211;local v212;local v213;while true do if (v209==0) then v210=0;v211=nil;v209=1;end if (v209==1) then v212=nil;v213=nil;v209=2;end if (v209==2) then while true do if (v210==1) then v213=0;for v608=v211,v155[4] do local v609=0;local v610;while true do if (v609==0) then v610=0;while true do if (v610==0) then v213=v213 + 1 ;v153[v608]=v212[v213];break;end end break;end end end break;end if (v210==0) then local v528=0;while true do if (v528==0) then v211=v155[2];v212={v153[v211](v21(v153,v211 + 1 ,v148))};v528=1;end if (1==v528) then v210=1;break;end end end end break;end end else do return;end end elseif (v156<=5) then if (v156==4) then local v214=0;local v215;local v216;local v217;while true do if (0==v214) then v215=0;v216=nil;v214=1;end if (v214==1) then v217=nil;while true do if (0==v215) then local v529=0;while true do if (v529==0) then v216=v155[2];v217=v153[v216];v529=1;end if (v529==1) then v215=1;break;end end end if (v215==1) then for v611=v216 + 1 ,v148 do v15(v217,v153[v611]);end break;end end break;end end else local v218=0;local v219;local v220;local v221;local v222;while true do if (v218==0) then v219=0;v220=nil;v218=1;end if (v218==1) then v221=nil;v222=nil;v218=2;end if (v218==2) then while true do if (v219==2) then for v612=1,v155[4] do local v613=0;local v614;local v615;while true do if (v613==0) then v614=0;v615=nil;v613=1;end if (v613==1) then while true do if (v614==1) then if (v615[1]==30) then v222[v612-1 ]={v153,v615[3]};else v222[v612-1 ]={v63,v615[3]};end v152[ #v152 + 1 ]=v222;break;end if (v614==0) then local v758=0;while true do if (0==v758) then v147=v147 + 1 ;v615=v143[v147];v758=1;end if (v758==1) then v614=1;break;end end end end break;end end end v153[v155[2]]=v43(v220,v221,v64);break;end if (v219==0) then local v531=0;while true do if (v531==1) then v219=1;break;end if (v531==0) then v220=v144[v155[3]];v221=nil;v531=1;end end end if (v219==1) then local v532=0;while true do if (v532==0) then v222={};v221=v18({},{[v7("\15\209\254\172\52\235\239","\80\142\151\194")]=function(v713,v714)local v715=0;local v716;local v717;while true do if (v715==0) then v716=0;v717=nil;v715=1;end if (v715==1) then while true do if (v716==0) then local v792=0;while true do if (v792==0) then v717=v222[v714];return v717[1][v717[2]];end end end end break;end end end,[v7("\115\60\200\114\91\10\200\115\73\27","\44\99\166\23")]=function(v718,v719,v720)local v721=0;local v722;local v723;while true do if (v721==0) then v722=0;v723=nil;v721=1;end if (v721==1) then while true do if (0==v722) then v723=v222[v719];v723[1][v723[2]]=v720;break;end end break;end end end});v532=1;end if (v532==1) then v219=2;break;end end end end break;end end end elseif (v156==6) then if (v153[v155[2]]<=v155[4]) then v147=v147 + (958 -(892 + 65)) ;else v147=v155[7 -4 ];end else v147=v155[3];end elseif (v156<=11) then if (v156<=9) then if (v156==8) then v153[v155[2]]=v153[v155[3]]/v155[4] ;elseif (v153[v155[2]]~=v155[4]) then v147=v147 + (1 -0) ;else v147=v155[3];end elseif (v156>10) then local v225=0;local v226;local v227;local v228;local v229;local v230;while true do if (v225==0) then v226=v155[2];v227=v155[4];v225=1;end if (v225==1) then v228=v226 + 2 ;v229={v153[v226](v153[v226 + (1 -0) ],v153[v228])};v225=2;end if (v225==3) then if v230 then local v524=0;local v525;while true do if (v524==0) then v525=0;while true do if (v525==0) then v153[v228]=v230;v147=v155[3];break;end end break;end end else v147=v147 + 1 ;end break;end if (v225==2) then for v518=1,v227 do v153[v228 + v518 ]=v229[v518];end v230=v229[1];v225=3;end end else local v231=0;local v232;local v233;local v234;local v235;while true do if (v231==1) then v234=nil;v235=nil;v231=2;end if (v231==0) then v232=0;v233=nil;v231=1;end if (v231==2) then while true do if (v232==1) then v235=v153[v233 + 2 ];if (v235>0) then if (v234>v153[v233 + 1 ]) then v147=v155[353 -(87 + 263) ];else v153[v233 + 3 ]=v234;end elseif (v234<v153[v233 + 1 ]) then v147=v155[3];else v153[v233 + 3 ]=v234;end break;end if (0==v232) then local v534=0;while true do if (v534==1) then v232=1;break;end if (0==v534) then v233=v155[2];v234=v153[v233];v534=1;end end end end break;end end end elseif (v156<=13) then if (v156>12) then do return;end else do return v153[v155[182 -(67 + 113) ]];end end elseif (v156>14) then local v236=0;local v237;local v238;while true do if (v236==1) then while true do if (0==v237) then v238=v155[2];v153[v238]=v153[v238](v21(v153,v238 + 1 + 0 ,v148));break;end end break;end if (v236==0) then v237=0;v238=nil;v236=1;end end else v153[v155[2]]= #v153[v155[3]];end elseif (v156<=23) then if (v156<=19) then if (v156<=17) then if (v156==16) then local v240=0;local v241;local v242;while true do if (v240==1) then while true do if (v241==0) then v242=v155[2];v153[v242](v21(v153,v242 + 1 ,v148));break;end end break;end if (v240==0) then v241=0;v242=nil;v240=1;end end else v153[v155[4 -2 ]]=v153[v155[3]]/v155[4] ;end elseif (v156>18) then local v244=0;local v245;local v246;while true do if (v244==1) then while true do if (v245==0) then v246=v155[2];do return v153[v246](v21(v153,v246 + 1 ,v155[3]));end break;end end break;end if (v244==0) then v245=0;v246=nil;v244=1;end end else local v247=0;local v248;local v249;local v250;local v251;while true do if (v247==2) then while true do if (v248==2) then if (v250>0) then if (v251<=v153[v249 + 1 ]) then local v728=0;local v729;while true do if (v728==0) then v729=0;while true do if (v729==0) then v147=v155[11 -8 ];v153[v249 + 3 ]=v251;break;end end break;end end end elseif (v251>=v153[v249 + 1 ]) then local v730=0;local v731;while true do if (v730==0) then v731=0;while true do if (v731==0) then v147=v155[3];v153[v249 + (955 -(802 + 150)) ]=v251;break;end end break;end end end break;end if (v248==0) then local v539=0;while true do if (v539==1) then v248=1;break;end if (v539==0) then v249=v155[2];v250=v153[v249 + 2 + 0 ];v539=1;end end end if (v248==1) then local v540=0;while true do if (v540==1) then v248=2;break;end if (0==v540) then v251=v153[v249] + v250 ;v153[v249]=v251;v540=1;end end end end break;end if (v247==0) then v248=0;v249=nil;v247=1;end if (v247==1) then v250=nil;v251=nil;v247=2;end end end elseif (v156<=21) then if (v156>20) then local v252=0;local v253;local v254;while true do if (v252==1) then while true do if (v253==0) then v254=v155[2];do return v153[v254](v21(v153,v254 + 1 ,v155[3]));end break;end end break;end if (0==v252) then v253=0;v254=nil;v252=1;end end else v153[v155[2]]=v153[v155[3]] * v153[v155[4]] ;end elseif (v156==22) then v64[v155[3]]=v153[v155[2]];elseif (v153[v155[5 -3 ]]==v153[v155[4]]) then v147=v147 + (1 -0) ;else v147=v155[3];end elseif (v156<=27) then if (v156<=25) then if (v156==24) then if (v155[2]==v153[v155[3 + 1 ]]) then v147=v147 + 1 ;else v147=v155[3];end else v153[v155[2]]=v153[v155[3]]/v153[v155[4]] ;end elseif (v156>26) then local v259=0;local v260;local v261;local v262;local v263;local v264;while true do if (v259==1) then v262=nil;v263=nil;v259=2;end if (2==v259) then v264=nil;while true do if (v260==2) then for v616=v261,v148 do local v617=0;local v618;while true do if (0==v617) then v618=0;while true do if (v618==0) then v264=v264 + 1 ;v153[v616]=v262[v264];break;end end break;end end end break;end if (v260==1) then local v542=0;while true do if (0==v542) then v148=(v263 + v261) -(998 -(915 + 82)) ;v264=0;v542=1;end if (v542==1) then v260=2;break;end end end if (v260==0) then local v543=0;while true do if (v543==1) then v260=1;break;end if (v543==0) then v261=v155[2];v262,v263=v146(v153[v261](v153[v261 + 1 ]));v543=1;end end end end break;end if (0==v259) then v260=0;v261=nil;v259=1;end end else v147=v155[3];end elseif (v156<=29) then if (v156>28) then v153[v155[2]][v153[v155[3]]]=v153[v155[4]];else local v268=0;local v269;local v270;local v271;local v272;local v273;while true do if (v268==0) then v269=0;v270=nil;v268=1;end if (v268==2) then v273=nil;while true do if (v269==1) then local v544=0;while true do if (v544==0) then v148=(v272 + v270) -1 ;v273=0;v544=1;end if (v544==1) then v269=2;break;end end end if (v269==0) then local v545=0;while true do if (v545==0) then v270=v155[5 -3 ];v271,v272=v146(v153[v270](v21(v153,v270 + 1 ,v155[3])));v545=1;end if (v545==1) then v269=1;break;end end end if (v269==2) then for v619=v270,v148 do local v620=0;local v621;while true do if (v620==0) then v621=0;while true do if (v621==0) then v273=v273 + 1 ;v153[v619]=v271[v273];break;end end break;end end end break;end end break;end if (v268==1) then v271=nil;v272=nil;v268=2;end end end elseif (v156==30) then v153[v155[2]]=v153[v155[3]];else local v276=0;local v277;local v278;local v279;local v280;while true do if (0==v276) then v277=0;v278=nil;v276=1;end if (v276==1) then v279=nil;v280=nil;v276=2;end if (v276==2) then while true do if (v277==1) then v280=v153[v278 + 2 ];if (v280>0) then if (v279>v153[v278 + 1 ]) then v147=v155[3];else v153[v278 + 2 + 1 ]=v279;end elseif (v279<v153[v278 + 1 ]) then v147=v155[3];else v153[v278 + (3 -0) ]=v279;end break;end if (v277==0) then local v547=0;while true do if (v547==0) then v278=v155[2];v279=v153[v278];v547=1;end if (v547==1) then v277=1;break;end end end end break;end end end elseif (v156<=47) then if (v156<=39) then if (v156<=35) then if (v156<=33) then if (v156==32) then local v281=0;local v282;local v283;while true do if (v281==0) then v282=0;v283=nil;v281=1;end if (v281==1) then while true do if (v282==0) then v283=v155[2];v153[v283]=v153[v283]();break;end end break;end end else v63[v155[3]]=v153[v155[2]];end elseif (v156==34) then local v286=0;local v287;local v288;while true do if (v286==1) then while true do if (0==v287) then v288=v153[v155[4]];if  not v288 then v147=v147 + 1 ;else local v667=0;local v668;while true do if (v667==0) then v668=0;while true do if (v668==0) then v153[v155[2]]=v288;v147=v155[1190 -(1069 + 118) ];break;end end break;end end end break;end end break;end if (v286==0) then v287=0;v288=nil;v286=1;end end elseif (v153[v155[4 -2 ]]~=v155[8 -4 ]) then v147=v147 + 1 ;else v147=v155[3];end elseif (v156<=(7 + 30)) then if (v156==36) then if  not v153[v155[2]] then v147=v147 + 1 ;else v147=v155[3];end else local v289=0;local v290;local v291;local v292;while true do if (v289==1) then v292=nil;while true do if (v290==0) then local v551=0;while true do if (0==v551) then v291=v155[2];v292=v153[v155[3]];v551=1;end if (v551==1) then v290=1;break;end end end if (1==v290) then v153[v291 + 1 ]=v292;v153[v291]=v292[v155[4]];break;end end break;end if (v289==0) then v290=0;v291=nil;v289=1;end end end elseif (v156>38) then local v293=0;local v294;local v295;local v296;local v297;while true do if (v293==0) then v294=0;v295=nil;v293=1;end if (v293==1) then v296=nil;v297=nil;v293=2;end if (v293==2) then while true do if (v294==1) then local v555=0;while true do if (v555==0) then v297=v153[v295] + v296 ;v153[v295]=v297;v555=1;end if (v555==1) then v294=2;break;end end end if (v294==2) then if (v296>0) then if (v297<=v153[v295 + (1 -0) ]) then local v736=0;local v737;while true do if (v736==0) then v737=0;while true do if (v737==0) then v147=v155[3];v153[v295 + 3 ]=v297;break;end end break;end end end elseif (v297>=v153[v295 + 1 ]) then local v738=0;local v739;while true do if (v738==0) then v739=0;while true do if (0==v739) then v147=v155[3];v153[v295 + 3 ]=v297;break;end end break;end end end break;end if (v294==0) then local v556=0;while true do if (v556==1) then v294=1;break;end if (v556==0) then v295=v155[2];v296=v153[v295 + 2 ];v556=1;end end end end break;end end else local v298=0;local v299;local v300;while true do if (v298==1) then while true do if (v299==0) then v300=v155[2];v153[v300]=v153[v300](v21(v153,v300 + 1 + 0 ,v155[3]));break;end end break;end if (v298==0) then v299=0;v300=nil;v298=1;end end end elseif (v156<=(834 -(368 + 423))) then if (v156<=41) then if (v156>40) then local v301=0;local v302;local v303;while true do if (v301==0) then v302=0;v303=nil;v301=1;end if (v301==1) then while true do if (v302==0) then v303=v155[6 -4 ];do return v21(v153,v303,v148);end break;end end break;end end else local v304=0;local v305;local v306;local v307;local v308;while true do if (v304==0) then v305=0;v306=nil;v304=1;end if (v304==2) then while true do if (v305==0) then local v560=0;while true do if (v560==0) then v306=v155[2];v307={v153[v306](v21(v153,v306 + 1 ,v148))};v560=1;end if (v560==1) then v305=1;break;end end end if (v305==1) then v308=0;for v622=v306,v155[4] do local v623=0;local v624;while true do if (v623==0) then v624=0;while true do if (v624==0) then v308=v308 + (19 -(10 + 8)) ;v153[v622]=v307[v308];break;end end break;end end end break;end end break;end if (v304==1) then v307=nil;v308=nil;v304=2;end end end elseif (v156>42) then v153[v155[2]]=v153[v155[3]]%v153[v155[4]] ;else v153[v155[2]][v153[v155[3]]]=v153[v155[4]];end elseif (v156<=45) then if (v156>44) then v153[v155[2]]=v153[v155[3]][v153[v155[4]]];else v153[v155[2]]=v153[v155[3]]%v155[4] ;end elseif (v156==(176 -130)) then local v315=0;local v316;local v317;local v318;while true do if (1==v315) then v318=nil;while true do if (v316==1) then v153[v317 + 1 ]=v318;v153[v317]=v318[v155[4]];break;end if (v316==0) then local v564=0;while true do if (1==v564) then v316=1;break;end if (0==v564) then v317=v155[2];v318=v153[v155[3]];v564=1;end end end end break;end if (v315==0) then v316=0;v317=nil;v315=1;end end else v153[v155[2]]=v153[v155[3]] + v155[4] ;end elseif (v156<=55) then if (v156<=51) then if (v156<=49) then if (v156>48) then local v320=0;local v321;local v322;while true do if (0==v320) then v321=0;v322=nil;v320=1;end if (v320==1) then while true do if (v321==0) then v322=v155[444 -(416 + 26) ];do return v21(v153,v322,v322 + v155[3] );end break;end end break;end end else local v323=0;local v324;local v325;while true do if (0==v323) then v324=0;v325=nil;v323=1;end if (1==v323) then while true do if (v324==0) then v325=v155[2];v153[v325](v21(v153,v325 + 1 ,v155[3]));break;end end break;end end end elseif (v156==50) then local v326=0;local v327;local v328;local v329;while true do if (v326==1) then v329=nil;while true do if (v327==0) then local v567=0;while true do if (v567==1) then v327=1;break;end if (v567==0) then v328=v155[2];v329=v153[v328];v567=1;end end end if (v327==1) then for v625=v328 + 1 ,v148 do v15(v329,v153[v625]);end break;end end break;end if (0==v326) then v327=0;v328=nil;v326=1;end end else v153[v155[2]][v153[v155[3]]]=v155[4];end elseif (v156<=53) then if (v156==52) then local v332=0;local v333;local v334;local v335;local v336;local v337;while true do if (v332==1) then v335=nil;v336=nil;v332=2;end if (v332==0) then v333=0;v334=nil;v332=1;end if (v332==2) then v337=nil;while true do if (v333==0) then local v568=0;while true do if (v568==1) then v333=1;break;end if (v568==0) then v334=v155[6 -4 ];v335,v336=v146(v153[v334](v21(v153,v334 + 1 ,v148)));v568=1;end end end if (v333==1) then local v569=0;while true do if (v569==1) then v333=2;break;end if (v569==0) then v148=(v336 + v334) -1 ;v337=0;v569=1;end end end if (v333==2) then for v626=v334,v148 do local v627=0;local v628;while true do if (0==v627) then v628=0;while true do if (v628==0) then v337=v337 + 1 + 0 ;v153[v626]=v335[v337];break;end end break;end end end break;end end break;end end elseif (v155[2]==v153[v155[4]]) then v147=v147 + 1 ;else v147=v155[3];end elseif (v156==54) then do return v153[v155[2]];end else v153[v155[2]]=v153[v155[3]];end elseif (v156<=59) then if (v156<=57) then if (v156>(98 -42)) then v153[v155[2]]=v155[441 -(145 + 293) ];else local v342=0;local v343;local v344;while true do if (v342==1) then while true do if (0==v343) then v344=v155[2];v153[v344]=v153[v344](v153[v344 + 1 ]);break;end end break;end if (v342==0) then v343=0;v344=nil;v342=1;end end end elseif (v156>58) then if (v153[v155[2]]<=v155[4]) then v147=v147 + 1 ;else v147=v155[3];end else v153[v155[2]]=v153[v155[3]] * v153[v155[4]] ;end elseif (v156<=61) then if (v156==60) then v153[v155[2]]=v155[3] * v153[v155[4]] ;else local v347=0;local v348;local v349;local v350;while true do if (v347==0) then v348=0;v349=nil;v347=1;end if (1==v347) then v350=nil;while true do if (v348==1) then for v629=v349 + 1 ,v155[3] do v15(v350,v153[v629]);end break;end if (v348==0) then local v572=0;while true do if (v572==1) then v348=1;break;end if (0==v572) then v349=v155[2];v350=v153[v349];v572=1;end end end end break;end end end elseif (v156>(492 -(44 + 386))) then local v351=0;local v352;local v353;while true do if (v351==0) then v352=0;v353=nil;v351=1;end if (v351==1) then while true do if (v352==1) then for v630=v353,v148 do local v631=0;local v632;local v633;while true do if (v631==0) then v632=0;v633=nil;v631=1;end if (v631==1) then while true do if (0==v632) then v633=v149[v630-v353 ];v153[v630]=v633;break;end end break;end end end break;end if (v352==0) then local v573=0;while true do if (v573==0) then v353=v155[1488 -(998 + 488) ];v148=(v353 + v154) -1 ;v573=1;end if (v573==1) then v352=1;break;end end end end break;end end elseif (v153[v155[2]]~=v153[v155[4]]) then v147=v147 + 1 ;else v147=v155[3];end elseif (v156<=95) then if (v156<=(26 + 53)) then if (v156<=71) then if (v156<=67) then if (v156<=65) then if (v156==64) then v153[v155[2]]=v155[3] + v153[v155[4]] ;else v153[v155[2]]=v153[v155[3]] + v153[v155[4]] ;end elseif (v156>66) then local v356=0;local v357;local v358;while true do if (v356==0) then v357=0;v358=nil;v356=1;end if (v356==1) then while true do if (v357==1) then for v634=v358,v148 do local v635=0;local v636;local v637;while true do if (0==v635) then v636=0;v637=nil;v635=1;end if (v635==1) then while true do if (v636==0) then v637=v149[v634-v358 ];v153[v634]=v637;break;end end break;end end end break;end if (0==v357) then local v574=0;while true do if (v574==1) then v357=1;break;end if (v574==0) then v358=v155[2];v148=(v358 + v154) -1 ;v574=1;end end end end break;end end elseif (v155[2]<=v153[v155[4]]) then v147=v147 + 1 ;else v147=v155[3];end elseif (v156<=69) then if (v156>(56 + 12)) then v153[v155[2]]=v155[3];else local v361=0;local v362;local v363;local v364;local v365;local v366;while true do if (v361==0) then v362=0;v363=nil;v361=1;end if (v361==2) then v366=nil;while true do if (v362==1) then local v575=0;while true do if (0==v575) then v148=(v365 + v363) -1 ;v366=772 -(201 + 571) ;v575=1;end if (v575==1) then v362=2;break;end end end if (2==v362) then for v638=v363,v148 do local v639=0;local v640;while true do if (v639==0) then v640=0;while true do if (0==v640) then v366=v366 + 1 ;v153[v638]=v364[v366];break;end end break;end end end break;end if (v362==0) then local v576=0;while true do if (v576==0) then v363=v155[2];v364,v365=v146(v153[v363](v21(v153,v363 + 1 ,v148)));v576=1;end if (v576==1) then v362=1;break;end end end end break;end if (v361==1) then v364=nil;v365=nil;v361=2;end end end elseif (v156==70) then local v367=0;local v368;local v369;while true do if (v367==1) then while true do if (v368==0) then v369=v155[2];v153[v369](v21(v153,v369 + 1 ,v155[3]));break;end end break;end if (v367==0) then v368=0;v369=nil;v367=1;end end elseif (v153[v155[2]]==v155[4]) then v147=v147 + 1 ;else v147=v155[3];end elseif (v156<=75) then if (v156<=73) then if (v156>72) then v153[v155[2]]=v63[v155[3]];else local v372=0;local v373;local v374;while true do if (v372==1) then while true do if (0==v373) then v374=v155[1140 -(116 + 1022) ];v153[v374](v21(v153,v374 + 1 ,v148));break;end end break;end if (v372==0) then v373=0;v374=nil;v372=1;end end end elseif (v156>74) then v153[v155[2]]=v153[v155[3]] -v153[v155[4]] ;else local v376=0;local v377;local v378;local v379;local v380;while true do if (v376==0) then v377=0;v378=nil;v376=1;end if (2==v376) then while true do if (v377==0) then local v579=0;while true do if (v579==1) then v377=1;break;end if (v579==0) then v378=v144[v155[3]];v379=nil;v579=1;end end end if (v377==1) then local v580=0;while true do if (v580==1) then v377=2;break;end if (v580==0) then v380={};v379=v18({},{[v7("\155\67\254\39\50\54\188","\196\28\151\73\86\83")]=function(v740,v741)local v742=0;local v743;local v744;while true do if (v742==1) then while true do if (0==v743) then local v803=0;while true do if (v803==0) then v744=v380[v741];return v744[4 -3 ][v744[2]];end end end end break;end if (v742==0) then v743=0;v744=nil;v742=1;end end end,[v7("\73\204\13\44\7\139\86\28\115\235","\22\147\99\73\112\226\56\120")]=function(v745,v746,v747)local v748=0;local v749;local v750;while true do if (v748==0) then v749=0;v750=nil;v748=1;end if (v748==1) then while true do if (v749==0) then v750=v380[v746];v750[1][v750[2]]=v747;break;end end break;end end end});v580=1;end end end if (v377==2) then for v641=1,v155[4] do local v642=0;local v643;local v644;while true do if (v642==0) then v643=0;v644=nil;v642=1;end if (v642==1) then while true do if (v643==1) then if (v644[1]==30) then v380[v641-1 ]={v153,v644[3]};else v380[v641-1 ]={v63,v644[3]};end v152[ #v152 + 1 + 0 ]=v380;break;end if (v643==0) then local v774=0;while true do if (v774==0) then v147=v147 + 1 ;v644=v143[v147];v774=1;end if (v774==1) then v643=1;break;end end end end break;end end end v153[v155[2]]=v43(v378,v379,v64);break;end end break;end if (v376==1) then v379=nil;v380=nil;v376=2;end end end elseif (v156<=77) then if (v156>76) then v153[v155[2]]=v155[3] * v153[v155[4]] ;else v153[v155[2]]=v153[v155[3]] -v153[v155[4]] ;end elseif (v156==78) then local v383=0;local v384;local v385;local v386;local v387;while true do if (v383==0) then v384=0;v385=nil;v383=1;end if (v383==1) then v386=nil;v387=nil;v383=2;end if (2==v383) then while true do if (v384==0) then local v582=0;while true do if (v582==0) then v385=v155[7 -5 ];v386=v153[v385];v582=1;end if (v582==1) then v384=1;break;end end end if (v384==1) then v387=v155[3];for v645=1,v387 do v386[v645]=v153[v385 + v645 ];end break;end end break;end end elseif (v153[v155[2]]<v153[v155[4]]) then v147=v147 + 1 ;else v147=v155[3];end elseif (v156<=87) then if (v156<=83) then if (v156<=81) then if (v156==80) then local v388=0;local v389;local v390;while true do if (v388==1) then while true do if (v389==0) then v390=v155[2];v153[v390]=v153[v390](v21(v153,v390 + 1 ,v148));break;end end break;end if (0==v388) then v389=0;v390=nil;v388=1;end end elseif (v155[7 -5 ]<=v153[v155[4]]) then v147=v147 + 1 ;else v147=v155[3];end elseif (v156==82) then v153[v155[2]]=v155[3] -v153[v155[4]] ;else for v484=v155[861 -(814 + 45) ],v155[3] do v153[v484]=nil;end end elseif (v156<=85) then if (v156==84) then v153[v155[2]]=v153[v155[3]]%v155[4] ;elseif v153[v155[2]] then v147=v147 + 1 ;else v147=v155[3];end elseif (v156==(211 -125)) then v153[v155[1 + 1 ]]=v153[v155[3]] + v153[v155[4]] ;else local v394=0;local v395;local v396;while true do if (1==v394) then while true do if (v395==0) then v396=v155[2];v153[v396](v153[v396 + 1 ]);break;end end break;end if (v394==0) then v395=0;v396=nil;v394=1;end end end elseif (v156<=91) then if (v156<=89) then if (v156==88) then v153[v155[2]]=v153[v155[2 + 1 ]]%v153[v155[4]] ;else local v398=0;local v399;local v400;while true do if (v398==1) then while true do if (v399==0) then v400=v155[2];v153[v400](v153[v400 + (886 -(261 + 624)) ]);break;end end break;end if (v398==0) then v399=0;v400=nil;v398=1;end end end elseif (v156>90) then v153[v155[2]]=v64[v155[3]];else v153[v155[3 -1 ]]=v153[v155[3]][v153[v155[4]]];end elseif (v156<=93) then if (v156>92) then v153[v155[2]]=v155[3] -v153[v155[4]] ;elseif  not v153[v155[2]] then v147=v147 + 1 ;else v147=v155[3];end elseif (v156>94) then v153[v155[2]]=v153[v155[3]]/v153[v155[4]] ;else local v407=0;local v408;local v409;while true do if (v407==0) then v408=0;v409=nil;v407=1;end if (v407==1) then while true do if (v408==0) then v409=v155[1082 -(1020 + 60) ];v153[v409]=v153[v409](v153[v409 + (1424 -(630 + 793)) ]);break;end end break;end end end elseif (v156<=(376 -265)) then if (v156<=103) then if (v156<=99) then if (v156<=97) then if (v156>(454 -358)) then v153[v155[2]]=v64[v155[3]];else v153[v155[2]]=v153[v155[3]] -v155[4] ;end elseif (v156>98) then local v413=0;local v414;local v415;while true do if (v413==1) then while true do if (v414==0) then v415=v153[v155[4]];if  not v415 then v147=v147 + 1 ;else local v669=0;local v670;while true do if (v669==0) then v670=0;while true do if (v670==0) then v153[v155[2]]=v415;v147=v155[3];break;end end break;end end end break;end end break;end if (v413==0) then v414=0;v415=nil;v413=1;end end else local v416=0;local v417;local v418;local v419;local v420;local v421;while true do if (v416==1) then v419=v417 + 2 ;v420={v153[v417](v153[v417 + 1 ],v153[v419])};v416=2;end if (0==v416) then v417=v155[2];v418=v155[4];v416=1;end if (v416==3) then if v421 then local v526=0;local v527;while true do if (v526==0) then v527=0;while true do if (v527==0) then v153[v419]=v421;v147=v155[3];break;end end break;end end else v147=v147 + 1 + 0 ;end break;end if (v416==2) then for v521=1,v418 do v153[v419 + v521 ]=v420[v521];end v421=v420[1];v416=3;end end end elseif (v156<=101) then if (v156>100) then v153[v155[2]]= #v153[v155[3]];else v153[v155[2]]={};end elseif (v156==102) then v153[v155[6 -4 ]]=v155[3]~=0 ;else local v425=0;local v426;local v427;while true do if (v425==1) then while true do if (v426==0) then v427=v155[2];v153[v427]=v153[v427](v21(v153,v427 + 1 ,v155[3]));break;end end break;end if (v425==0) then v426=0;v427=nil;v425=1;end end end elseif (v156<=107) then if (v156<=105) then if (v156>104) then local v428=0;local v429;local v430;local v431;local v432;local v433;while true do if (v428==0) then v429=0;v430=nil;v428=1;end if (v428==2) then v433=nil;while true do if (v429==0) then local v593=0;while true do if (v593==1) then v429=1;break;end if (v593==0) then v430=v155[2];v431,v432=v146(v153[v430](v21(v153,v430 + (1748 -(760 + 987)) ,v155[3])));v593=1;end end end if (2==v429) then for v648=v430,v148 do local v649=0;local v650;while true do if (v649==0) then v650=0;while true do if (v650==0) then v433=v433 + 1 ;v153[v648]=v431[v433];break;end end break;end end end break;end if (v429==1) then local v594=0;while true do if (1==v594) then v429=2;break;end if (v594==0) then v148=(v432 + v430) -1 ;v433=0;v594=1;end end end end break;end if (v428==1) then v431=nil;v432=nil;v428=2;end end else v153[v155[2]][v153[v155[3]]]=v155[4];end elseif (v156==106) then local v436=0;local v437;local v438;local v439;local v440;while true do if (v436==0) then v437=0;v438=nil;v436=1;end if (v436==1) then v439=nil;v440=nil;v436=2;end if (v436==2) then while true do if (v437==1) then v440=0;for v651=v438,v155[4] do local v652=0;local v653;while true do if (v652==0) then v653=0;while true do if (v653==0) then v440=v440 + 1 ;v153[v651]=v439[v440];break;end end break;end end end break;end if (v437==0) then local v595=0;while true do if (v595==1) then v437=1;break;end if (v595==0) then v438=v155[2];v439={v153[v438](v153[v438 + 1 ])};v595=1;end end end end break;end end elseif (v153[v155[2]]==v155[770 -(745 + 21) ]) then v147=v147 + 1 ;else v147=v155[3];end elseif (v156<=109) then if (v156>108) then local v441=0;local v442;local v443;local v444;while true do if (v441==0) then v442=0;v443=nil;v441=1;end if (v441==1) then v444=nil;while true do if (v442==0) then local v596=0;while true do if (0==v596) then v443=v155[3];v444=v153[v443];v596=1;end if (1==v596) then v442=1;break;end end end if (v442==1) then for v654=v443 + 1 ,v155[4] do v444=v444   .. v153[v654] ;end v153[v155[2]]=v444;break;end end break;end end else local v445=0;local v446;local v447;local v448;local v449;while true do if (v445==1) then v448=nil;v449=nil;v445=2;end if (v445==0) then v446=0;v447=nil;v445=1;end if (v445==2) then while true do if (v446==0) then local v598=0;while true do if (v598==1) then v446=1;break;end if (v598==0) then v447=v155[2];v448={v153[v447](v153[v447 + 1 ])};v598=1;end end end if (v446==1) then v449=0;for v655=v447,v155[4] do local v656=0;local v657;while true do if (v656==0) then v657=0;while true do if (0==v657) then v449=v449 + 1 ;v153[v655]=v448[v449];break;end end break;end end end break;end end break;end end end elseif (v156>110) then v153[v155[2]]=v153[v155[3]][v155[4]];elseif (v153[v155[2]]<v153[v155[2 + 2 ]]) then v147=v147 + 1 ;else v147=v155[3];end elseif (v156<=119) then if (v156<=115) then if (v156<=113) then if (v156==112) then v153[v155[2]]=v153[v155[3]][v155[4]];else v153[v155[2]]=v155[3]~=0 ;end elseif (v156==114) then local v455=0;local v456;local v457;while true do if (0==v455) then v456=0;v457=nil;v455=1;end if (v455==1) then while true do if (v456==0) then v457=v155[2];v153[v457]=v153[v457]();break;end end break;end end else v153[v155[2]]={};end elseif (v156<=117) then if (v156>116) then v63[v155[3]]=v153[v155[2]];else local v461=0;local v462;local v463;while true do if (v461==0) then v462=0;v463=nil;v461=1;end if (v461==1) then while true do if (v462==0) then v463=v155[2];do return v21(v153,v463,v148);end break;end end break;end end end elseif (v156>118) then v64[v155[3]]=v153[v155[2]];else v153[v155[2]]=v63[v155[3]];end elseif (v156<=123) then if (v156<=121) then if (v156>120) then if (v153[v155[2]]==v153[v155[4]]) then v147=v147 + 1 ;else v147=v155[3];end elseif (v153[v155[2]]~=v153[v155[4]]) then v147=v147 + 1 ;else v147=v155[3];end elseif (v156>122) then local v468=0;local v469;local v470;local v471;local v472;local v473;while true do if (v468==2) then v473=nil;while true do if (v469==2) then for v658=v470,v148 do local v659=0;local v660;while true do if (v659==0) then v660=0;while true do if (v660==0) then v473=v473 + 1 ;v153[v658]=v471[v473];break;end end break;end end end break;end if (v469==1) then local v602=0;while true do if (v602==0) then v148=(v472 + v470) -1 ;v473=0 -0 ;v602=1;end if (1==v602) then v469=2;break;end end end if (v469==0) then local v603=0;while true do if (v603==0) then v470=v155[2];v471,v472=v146(v153[v470](v153[v470 + 1 ]));v603=1;end if (v603==1) then v469=1;break;end end end end break;end if (v468==0) then v469=0;v470=nil;v468=1;end if (v468==1) then v471=nil;v472=nil;v468=2;end end elseif v153[v155[2]] then v147=v147 + 1 ;else v147=v155[11 -8 ];end elseif (v156<=125) then if (v156==124) then local v474=0;local v475;local v476;local v477;while true do if (v474==0) then v475=0;v476=nil;v474=1;end if (v474==1) then v477=nil;while true do if (v475==0) then local v604=0;while true do if (v604==1) then v475=1;break;end if (v604==0) then v476=v155[3];v477=v153[v476];v604=1;end end end if (1==v475) then for v661=v476 + 1 ,v155[4] do v477=v477   .. v153[v661] ;end v153[v155[2]]=v477;break;end end break;end end else for v486=v155[2],v155[3] do v153[v486]=nil;end end elseif (v156>126) then local v478=0;local v479;local v480;local v481;local v482;while true do if (2==v478) then while true do if (v479==0) then local v606=0;while true do if (0==v606) then v480=v155[1 + 1 ];v481=v153[v480];v606=1;end if (v606==1) then v479=1;break;end end end if (v479==1) then v482=v155[3];for v662=1,v482 do v481[v662]=v153[v480 + v662 ];end break;end end break;end if (v478==1) then v481=nil;v482=nil;v478=2;end if (v478==0) then v479=0;v480=nil;v478=1;end end else v153[v155[2]]=v153[v155[3]] -v155[4] ;end v147=v147 + 1 ;break;end if (v176==0) then local v190=0;while true do if (v190==1) then v176=1;break;end if (v190==0) then v155=v143[v147];v156=v155[1];v190=1;end end end end break;end end end break;end if (v142==0) then v143=v67;v144=v68;v145=v69;v146=v41;v142=1;end if (v142==2) then v151=v20("#",...) -1 ;v152={};v153={};for v177=0,v151 do if (v177>=v145) then v149[v177-v145 ]=v150[v177 + 1 ];else v153[v177]=v150[v177 + 1 ];end end v142=3;end end end;end end end break;end end end break;end end end v47=1;end if (v47==1) then return v43(v42(),{},v29)(...);end end end v45=2;end if (2==v45) then if (v31==1) then local v48=0;while true do if (1==v48) then function v35()local v70=0;local v71;local v72;while true do if (v70==1) then while true do local v112=0;while true do if (v112==0) then if (v71==(163 -(92 + 71))) then local v123=0;while true do if (v123==0) then v72=v9(v28,v32,v32);v32=v32 + 1 ;v123=1;end if (v123==1) then v71=1;break;end end end if (v71==1) then return v72;end break;end end end break;end if (0==v70) then v71=0 + 0 ;v72=nil;v70=1;end end end v36=nil;v48=2;end if (v48==0) then function v34(v73,v74,v75)if v75 then local v98=0;local v99;local v100;while true do if (v98==1) then while true do if (v99==0) then local v116=0;while true do if (v116==0) then v100=(v73/(2^(v74-(1 + 0))))%((4 -2)^(((v75-1) -(v74-(2 -1))) + 1)) ;return v100-(v100%(1 + 0)) ;end end end end break;end if (v98==0) then v99=0;v100=nil;v98=1;end end else local v101=0;local v102;local v103;while true do if (v101==1) then while true do if (0==v102) then local v117=0;while true do if (v117==0) then v103=(2 + 0)^(v74-((2 + 0) -1)) ;return (((v73%(v103 + v103))>=v103) and 1) or (0 -0) ;end end end end break;end if (v101==0) then v102=0 -0 ;v103=nil;v101=1;end end end end v35=nil;v48=1;end if (2==v48) then v31=2;break;end end end if (v31==4) then local v49=0;while true do if (0==v49) then v41=nil;function v41(...)return {...},v20("#",...);end v49=1;end if (v49==1) then v42=nil;function v42()local v76=0;local v77;local v78;local v79;local v80;local v81;local v82;local v83;while true do if (v76==1) then v79=nil;v80=nil;v76=2;end if (v76==2) then v81=nil;v82=nil;v76=3;end if (v76==3) then v83=nil;while true do local v113=0;while true do if (v113==0) then if (v77==1) then local v124=0;while true do if (v124==0) then v81={v78,v79,nil,v80};v82=v37();v124=1;end if (1==v124) then v83={};v77=2;break;end end end if (v77==0) then local v125=0;while true do if (v125==0) then v78={};v79={};v125=1;end if (1==v125) then v80={};v77=1;break;end end end v113=1;end if (v113==1) then if (2==v77) then local v126=0;while true do if (v126==1) then for v157=1,v37() do local v158=0;local v159;local v160;while true do if (v158==1) then while true do if (v159==0) then v160=v35();if (v34(v160,1,1)==0) then local v185=0;local v186;local v187;local v188;local v189;while true do if (v185==1) then v188=nil;v189=nil;v185=2;end if (v185==2) then while true do if (v186==1) then local v193=0;while true do if (v193==1) then v186=2;break;end if (v193==0) then v189={v36(),v36(),nil,nil};if (v187==0) then local v199=0;local v200;while true do if (0==v199) then v200=0;while true do if (v200==0) then v189[3]=v36();v189[4]=v36();break;end end break;end end elseif (v187==1) then v189[3]=v37();elseif (v187==(929 -(214 + 713))) then v189[1 + 2 ]=v37() -(2^(3 + 13)) ;elseif (v187==3) then local v490=0;local v491;while true do if (v490==0) then v491=0;while true do if (v491==0) then v189[880 -(282 + 595) ]=v37() -((1639 -(1523 + 114))^(15 + 1)) ;v189[4]=v36();break;end end break;end end end v193=1;end end end if (v186==3) then if (v34(v188,3,3)==1) then v189[1274 -(226 + 1044) ]=v83[v189[4]];end v78[v157]=v189;break;end if (v186==0) then local v195=0;while true do if (0==v195) then v187=v34(v160,2,3);v188=v34(v160,4,574 -(367 + 201) );v195=1;end if (v195==1) then v186=1;break;end end end if (v186==2) then local v196=0;while true do if (v196==0) then if (v34(v188,1,1)==1) then v189[2]=v83[v189[2 -0 ]];end if (v34(v188,2,2)==1) then v189[3]=v83[v189[1068 -(68 + 997) ]];end v196=1;end if (v196==1) then v186=3;break;end end end end break;end if (v185==0) then v186=0;v187=nil;v185=1;end end end break;end end break;end if (v158==0) then v159=0;v160=nil;v158=1;end end end v77=3;break;end if (v126==0) then for v161=1,v82 do local v162=0;local v163;local v164;local v165;while true do if (1==v162) then v165=nil;while true do if (1==v163) then if (v164==1) then v165=v35()~=0 ;elseif (v164==2) then v165=v38();elseif (v164==3) then v165=v39();end v83[v161]=v165;break;end if (v163==0) then local v183=0;while true do if (v183==0) then v164=v35();v165=nil;v183=1;end if (1==v183) then v163=1;break;end end end end break;end if (v162==0) then v163=0;v164=nil;v162=1;end end end v81[3]=v35();v126=1;end end end if (v77==3) then local v127=0;while true do if (v127==0) then for v166=1,v37() do v79[v166-1 ]=v42();end return v81;end end end break;end end end break;end if (v76==0) then v77=0;v78=nil;v76=1;end end end v49=2;end if (2==v49) then v31=5;break;end end end break;end if (v45==0) then if (v31==3) then local v50=0;while true do if (v50==2) then v31=4;break;end if (v50==0) then function v38()local v84=0;local v85;local v86;local v87;local v88;local v89;local v90;local v91;while true do if (v84==1) then v87=nil;v88=nil;v84=2;end if (v84==2) then v89=nil;v90=nil;v84=3;end if (v84==3) then v91=nil;while true do local v114=0;while true do if (v114==0) then if (v85==(2001 -(1805 + 193))) then local v128=0;while true do if (v128==0) then if (v90==0) then if (v89==0) then return v91 * (1036 -(623 + 413)) ;else local v173=0;local v174;while true do if (v173==0) then v174=0;while true do if (0==v174) then v90=(1506 -574) -(857 + 74) ;v88=0;break;end end break;end end end elseif (v90==2047) then return ((v89==0) and (v91 * (1/0))) or (v91 * NaN) ;end return v16(v91,v90-(1463 -(382 + 58)) ) * (v88 + (v89/((6 -4)^(44 + 8)))) ;end end end if (2==v85) then local v129=0;while true do if (v129==1) then v85=3;break;end if (v129==0) then v90=v34(v87,640 -(555 + (132 -68)) ,91 -60 );v91=((v34(v87,1237 -(902 + 303) )==(1 -0)) and  -1) or 1 ;v129=1;end end end v114=1;end if (v114==1) then if (v85==1) then local v130=0;while true do if (v130==0) then v88=2 -1 ;v89=(v34(v87,1,51 -(3 + 28) ) * (2^(1722 -(1121 + 569)))) + v86 ;v130=1;end if (v130==1) then v85=2;break;end end end if (v85==0) then local v131=0;while true do if (v131==0) then v86=v37();v87=v37();v131=1;end if (1==v131) then v85=1;break;end end end break;end end end break;end if (v84==0) then v85=0;v86=nil;v84=1;end end end v39=nil;v50=1;end if (v50==1) then function v39(v92)local v93=0;local v94;local v95;local v96;while true do if (v93==0) then v94=214 -(22 + 192) ;v95=nil;v93=1;end if (v93==1) then v96=nil;while true do local v115=0;while true do if (v115==1) then if (v94==0) then local v132=0;while true do if (v132==1) then v94=1;break;end if (v132==0) then v95=nil;if  not v92 then local v170=0;local v171;while true do if (v170==0) then v171=0;while true do if (v171==(683 -(483 + 200))) then v92=v37();if (v92==(1463 -(1404 + 59))) then return "";end break;end end break;end end end v132=1;end end end if (v94==(8 -5)) then return v14(v96);end break;end if (v115==0) then if (v94==1) then local v133=0;while true do if (0==v133) then v95=v11(v28,v32,(v32 + v92) -1 );v32=v32 + v92 ;v133=1;end if (1==v133) then v94=2;break;end end end if (v94==2) then local v134=0;while true do if (0==v134) then v96={};for v168=1, #v95 do v96[v168]=v10(v9(v11(v95,v168,v168)));end v134=1;end if (1==v134) then v94=3;break;end end end v115=1;end end end break;end end end v40=v37;v50=2;end end end if (0==v31) then local v51=0;while true do if (v51==1) then v28=v12(v11(v28,5),v7("\67\84","\109\122\213\232"),function(v97)if (v9(v97,2)==79) then local v104=0;local v105;while true do if (0==v104) then v105=0;while true do if (v105==0) then local v118=0;while true do if (v118==0) then v33=v8(v11(v97,1,2 -1 ));return "";end end end end break;end end else local v106=0;local v107;local v108;while true do if (v106==1) then while true do if (v107==0) then v108=v10(v8(v97,16));if v33 then local v135=0;local v136;local v137;while true do if (v135==1) then while true do local v172=0;while true do if (v172==0) then if (v136==0) then local v184=0;while true do if (v184==1) then v136=1;break;end if (v184==0) then v137=v13(v108,v33);v33=nil;v184=1;end end end if (v136==1) then return v137;end break;end end end break;end if (v135==0) then v136=0;v137=nil;v135=1;end end else return v108;end break;end end break;end if (v106==0) then v107=0;v108=nil;v106=1;end end end end);v34=nil;v51=2;end if (v51==0) then v32=1;v33=nil;v51=1;end if (v51==2) then v31=1;break;end end end v45=1;end end end break;end end end vv17(),...);end
